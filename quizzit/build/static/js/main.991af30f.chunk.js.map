{"version":3,"sources":["welcomeScreen.js","logInScreen.js","banner.js","sidebar.js","mainTemplate.js","dashboardNotification.js","progressBar.js","reportNotification.js","eventNotification.js","dashboard.js","signUpScreen.js","createQuizPage.js","answerPage.js","GradeChart.js","StudentSummaryChart.js","router.js","index.js","globals.js"],"names":["divStyle","width","marginTop","button1Style","marginRight","button2Style","headerStyle","marginBottom","WelcomeScreen","props","_this","_classCallCheck","this","_getPrototypeOf","call","goToLogIn","bind","_assertThisInitialized","goToSignUp","React","Component","history","push","react_default","a","createElement","className","align","style","onClick","inputStyle","buttonStyle","LogInScreen","logInScreen_classCallCheck","logInScreen_getPrototypeOf","logIn","logInScreen_assertThisInitialized","e","console","log","refs","username","value","user","pushLink","ref","type","placeholder","name","Banner","banner_classCallCheck","banner_getPrototypeOf","makeLogo","banner_assertThisInitialized","getLoginButton","getStatsLink","id","color","fontFamily","fontSize","lineHeight","textAlign","loggedIn","buttonText","link","Link","to","userType","STUDENT","createHorizontalDivider","Sidebar","sidebar_classCallCheck","sidebar_getPrototypeOf","getMyCourses","sidebar_assertThisInitialized","constructCourseMenu","getCourseDropdownLinks","getCourseListComponent","quiz","course","links","text","href","concat","EDUCATOR","firstOp","ADMIN","parentID","controllerID","targetID","targetSelector","parentSelector","linkComponents","map","linkInfo","class","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","_this2","courses","createVerticalDivider","Template","mainTemplate_classCallCheck","mainTemplate_possibleConstructorReturn","mainTemplate_getPrototypeOf","src_banner","src_sidebar","children","Notification","dashboardNotification_classCallCheck","dashboardNotification_possibleConstructorReturn","dashboardNotification_getPrototypeOf","title","ProgressBar","progressBar_classCallCheck","progressBar_getPrototypeOf","percentToColor","progressBar_assertThisInitialized","percent","baseFifty","averageColor","low","high","percentDec","i","avg","percentFull","barWidth","colorStyle","fillStyle","backgroundColor","textStyle","fillBarChildren","lastChildren","ReportNotification","reportNotification_classCallCheck","reportNotification_possibleConstructorReturn","reportNotification_getPrototypeOf","avgReportText","dashboardNotification","src_progressBar","average","description","EventNotification","eventNotification_classCallCheck","eventNotification_possibleConstructorReturn","eventNotification_getPrototypeOf","exclaimedTitle","meta","numQuestions","numStudents","Dashboard","dashboard_classCallCheck","dashboard_getPrototypeOf","state","getNotifications","dashboard_assertThisInitialized","packageEventNotification","packageReportNotification","packageNotification","data","questions","score","notification","eventNotification","slice","question","reportNotification","notificationElements","mainTemplate","SignUpScreen","signUpScreen_classCallCheck","signUpScreen_getPrototypeOf","signUpScreen_assertThisInitialized","globals","require","CreateQuizPage","createQuizPage_classCallCheck","createQuizPage_possibleConstructorReturn","createQuizPage_getPrototypeOf","quizzes","quiz_data","new_quizzes_array","setState","Tabs_default","defaultActiveKey","Tab_default","eventKey","createQuizPage_CreatequizForm","createQuiz","addQuiz","createQuizPage_CreatequestionForm","CreatequizForm","newtitle","_this3","Form_default","Group","as","Row","controlId","Label","column","sm","Col_default","Control","onChange","event","setTitle","target","Button_default","variant","CreatequestionForm","_this4","selectedIndex","selectedQuiz","selectedCheckbox","questionTitle","choiceValues","index","activeQuiz","activeIndex","correct_index","choices","splice","preventDefault","new_question","activeQuestionIndex","_this5","hasActiveQuestion","bsPrefix","changeActiveQuiz","key","createQuizPage_QuestionsList","changeActiveQuestion","deleteQuestion","handleChangeTitle","letter","Col","handleChangeChoice","Check","label","checked","handleSelect","modifyQuestion","addQuestion","QuestionsList","_this6","length","ListGroup_default","Item","AnswerPage","answerPage_classCallCheck","answerPage_possibleConstructorReturn","answerPage_getPrototypeOf","progress","answers","quizId","answer","activeQuestion","expectedAnswer","new_score","isCorrect","alert","correct_answer","new_progress","isFinished","new_index","result","userId","total_score","results_array","score_data","xs","bsStyle","startQuiz","Jumbotron_default","checkAnswer","GradeChart","_React$Component","GradeChart_classCallCheck","GradeChart_getPrototypeOf","getQuizData","GradeChart_assertThisInitialized","getChart","createGraph","createPerformanceGraphs","resetPerformance","quizData","attendance","enrolment","performanceGraphs","GradeChart_inherits","quizNum","topics","chosenBy","correct","quizName","chartContainer","answerKeys","Chart","labels","datasets","options","display","legend","position","container","document","getElementById","chartHolder","classList","add","appendChild","child","removeChild","match","params","courseName","quizTitle","StudentSummaryChart","StudentSummaryChart_classCallCheck","StudentSummaryChart_getPrototypeOf","resetChart","StudentSummaryChart_assertThisInitialized","createChart","loadChart","StudentSummaryChart_inherits","myChart","getContext","borderWidth","barChart","chart","undefined","parent","parentElement","newChart","setUserType","newUserType","Router","HashRouter","Switch","Route","path","exact","component","render","signUpScreen","GradeChart_GradeChart","_extends","StudentSummaryChart_StudentSummaryChart","dashboard","rootElem","router","ReactDOM","__webpack_require__","r","__webpack_exports__","d","translateUserType","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Object","defineProperty","get","set","height","colorVar"],"mappings":"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","file":"static/js/main.991af30f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst divStyle = {\r\n    width: '400px',\r\n    marginTop: '200px',\r\n}\r\n\r\nconst button1Style = {\r\n    marginRight: '20px',\r\n    width: '100px'\r\n}\r\n\r\nconst button2Style = {\r\n    width: '100px'\r\n}\r\n\r\nconst headerStyle = {\r\n    marginBottom: '20px',\r\n}\r\n\r\nclass WelcomeScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.goToLogIn = this.goToLogIn.bind(this);\r\n        this.goToSignUp = this.goToSignUp.bind(this);\r\n    }\r\n\r\n    goToLogIn() {\r\n        this.props.history.push(\"/logIn\");\r\n    }\r\n\r\n    goToSignUp() {\r\n        this.props.history.push(\"/signUp\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mx-auto\" align=\"center\" style={divStyle}>\r\n                <h1 style={headerStyle} >Welcome to Quizzit</h1>\r\n                <button className=\"btn btn-primary\" style={button1Style} onClick={this.goToLogIn}>Log In</button>\r\n                <button className=\"btn btn-primary\" style={button2Style} onClick={this.goToSignUp}>Sign Up</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WelcomeScreen;\r\n","import React, { Component } from 'react';\r\n\r\nconst divStyle = {\r\n    width: '500px',\r\n    marginTop: '100px',\r\n}\r\n\r\nconst headerStyle = {\r\n    marginBottom: '20px'\r\n}\r\n\r\nconst inputStyle = {\r\n    width: '200px'\r\n}\r\n\r\nconst buttonStyle = {\r\n    width: '100px'\r\n}\r\n\r\n\r\nclass LogInScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.logIn = this.logIn.bind(this);\r\n    }\r\n\r\n    logIn(e) {\r\n        console.log(this.refs.username.value);\r\n        const user = this.refs.username.value;\r\n        var pushLink = \"\";\r\n        if (user === \"Admin\") {\r\n            pushLink = \"/dashboardAdmin\";\r\n        } else if (user === \"Educator\") {\r\n            pushLink = \"/dashboardEducator\";\r\n        } else {\r\n            pushLink = \"dashboardStudent\";\r\n        }\r\n        this.props.history.push(pushLink);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mx-auto\" style={divStyle} align=\"center\">\r\n               <form>\r\n                     <h1 style={headerStyle}>Enter your details below:</h1>\r\n                     <input ref=\"username\" type=\"text\" style={inputStyle} className=\"form-control\" placeholder=\"Username\" name=\"uname\"></input><br/>\r\n                     <input type=\"password\" style={inputStyle} className=\"form-control\" placeholder=\"Password\" name=\"pword\"></input><br/>\r\n                     <button className=\"btn btn-primary\" style={buttonStyle} onClick={this.logIn}>Log In</button>\r\n                </form> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogInScreen;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { STUDENT, createHorizontalDivider } from './globals.js';\r\nimport './style/banner.css';\r\n\r\n\r\nclass Banner extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.makeLogo = this.makeLogo.bind(this);\r\n    this.getLoginButton = this.getLoginButton.bind(this);\r\n    this.getStatsLink   = this.getStatsLink.bind(this);\r\n  }\r\n\r\n  makeLogo() {\r\n    return (\r\n      <div id=\"mainLogo\"\r\n           style={{\r\n             \"width\": \"150px\",\r\n             \"color\": \"white\",\r\n             \"fontFamily\": \"Helvetica\",\r\n             \"fontSize\": \"2rem\",\r\n             \"lineHeight\": \"74px\",\r\n             \"textAlign\": \"center\"\r\n           }}>\r\n        Quizzit\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getLoginButton() {\r\n    const loggedIn = 'loggedIn' in this.props\r\n                        ? this.props.loggedIn\r\n                        : false;\r\n    const buttonText = loggedIn ? \"Log In\" : \"Log Out\";\r\n    const link = loggedIn ? \"/logIn\" : \"/\";\r\n\r\n    return (\r\n      <Link to={link}>\r\n        <div id=\"logButton\" className=\"linkButton qButton textshadow\">\r\n          { buttonText }\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  getStatsLink() {\r\n    let href = this.props.userType === STUDENT ? \"/studentStats\" : \"/gradeChart\";\r\n\r\n    return (\r\n      <Link to=\"href\">\r\n        <div id=\"statsButton\" className=\"linkButton qButton textshadow\">\r\n          My Stats\r\n        </div>\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"banner-container\">\r\n        <div id=\"banner\" className=\"d-flex justify-content-between align-items-center\">\r\n          { this.makeLogo() }\r\n          <div className=\"links d-flex justify-content-end\">\r\n            <Link to=\"/dashboard\">\r\n              <div id=\"homeButton\" className=\"linkButton qButton textshadow\">\r\n                Home\r\n              </div>\r\n            </Link>\r\n            { this.getStatsLink() }\r\n            { this.getLoginButton() }\r\n          </div>\r\n        </div>\r\n        { createHorizontalDivider(6, \"detail-dark\") }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Banner;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { STUDENT, EDUCATOR, ADMIN, createVerticalDivider } from './globals.js';\r\nimport './style/sidebar.css';\r\n\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getMyCourses = this.getMyCourses.bind(this);\r\n    this.constructCourseMenu = this.constructCourseMenu.bind(this);\r\n    this.getCourseDropdownLinks = this.getCourseDropdownLinks.bind(this);\r\n    this.getCourseListComponent = this.getCourseListComponent.bind(this);\r\n  }\r\n\r\n  getMyCourses() {\r\n    return [\r\n      {\r\n        \"name\": \"CSC309\",\r\n        \"quiz\": \"/answerPage\"\r\n      },\r\n      {\r\n        \"name\": \"CSC302\",\r\n        \"quiz\": null\r\n      },\r\n      {\r\n        \"name\": \"CSC367\",\r\n        \"quiz\": \"/answerPage\"\r\n      }];\r\n  }\r\n\r\n  getCourseDropdownLinks(course) {\r\n    if (this.props.userType === STUDENT) {\r\n      const links = [\r\n        {\r\n          \"text\": \"View History\",\r\n          \"href\": `/${course.name}/studentSummary`\r\n        }];\r\n\r\n      if (course.quiz != null) {\r\n        links.push({\r\n          \"text\": \"Take Quiz\",\r\n          \"href\": `/${course.name}/${course.quiz}`\r\n        });\r\n      }\r\n\r\n      return links;\r\n    } else if (this.props.userType === EDUCATOR) {\r\n      let firstOp = {}\r\n      if (course.quiz != null) {\r\n        firstOp[\"text\"] = \"View Quiz\";\r\n        firstOp[\"href\"] = `${course.name}/${course.quiz}`;\r\n      } else {\r\n        firstOp[\"text\"] = \"Create Quiz\";\r\n        firstOp[\"href\"] = \"/createQuiz\";\r\n      }\r\n\r\n      return [firstOp,\r\n        {\r\n          \"text\": \"View History\",\r\n          \"href\": `/${course.name}/1/gradeChart`\r\n        },\r\n        /**\r\n        Not Yet Implemented\r\n        {\r\n          \"text\": \"Enrolment\",\r\n          \"href\": \"#\"\r\n        }\r\n        **/\r\n      ];\r\n    } else if (this.props.userType === ADMIN) {\r\n      return [\r\n        {\r\n          \"text\": \"Edit Staff\",\r\n          \"href\": \"#\"\r\n        },\r\n        {\r\n          \"text\": \"View History\",\r\n          \"href\": `/${course.name}/1/gradeChart`\r\n        },\r\n        /**\r\n        Not Yet Implemented\r\n        {\r\n          \"text\": \"Enrolment\",\r\n          \"href\": \"#\"\r\n        }\r\n        **/\r\n      ];\r\n    }\r\n  }\r\n\r\n  constructCourseMenu(course, parentID) {\r\n    const controllerID   = `${course.name}Ctrl`;\r\n    const targetID       = `${course.name}Menu`;\r\n    const targetSelector = `#${targetID}`;\r\n    const parentSelector = `#${parentID}`;\r\n\r\n    // console.log(\"Blah\");\r\n    // console.log(this.props);\r\n    // const linkMeta = [];\r\n    const linkMeta = this.getCourseDropdownLinks(course);\r\n\r\n    const createLink = (linkInfo) => (\r\n      <li>\r\n        <Link to={linkInfo.href}>\r\n          <div className=\"qButton\">\r\n            {linkInfo.text}\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    )\r\n    const linkComponents = linkMeta.map(createLink);\r\n\r\n    return (\r\n      <div id={controllerID} className=\"courseControl\">\r\n        <div class=\"qButton courseLabel textshadow\" type=\"button\"\r\n             data-toggle=\"collapse\" data-target={targetSelector}\r\n             aria-expanded=\"true\" aria-controls={targetID}\r\n          >\r\n          {course.name}\r\n        </div>\r\n        <div id={targetID} class=\"courseMenu collapse\"\r\n             aria-labelledby={controllerID} data-parent={parentSelector}\r\n          >\r\n          <ul>\r\n            {linkComponents}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getCourseListComponent() {\r\n    const courses = this.getMyCourses();\r\n    const parentID = \"coursesMenu\";\r\n\r\n    const linkComponents = courses.map(\r\n      (course) => this.constructCourseMenu(course, parentID)\r\n    );\r\n\r\n    console.log(linkComponents);\r\n    return linkComponents;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"sidebarContainer\" className=\"d-flex align-items-stretch\">\r\n        { createVerticalDivider(8, \"detail-dark\") }\r\n        <div id=\"sidebar\">\r\n          <div id=\"coursesMenu\">\r\n            <div id=\"coursesHeader\" className=\"textshadow\">\r\n              Courses\r\n            </div>\r\n            <div className=\"courseList accordion\">\r\n              { this.getCourseListComponent() }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from 'react';\r\n\r\nimport Banner from './banner.js';\r\nimport Sidebar from './sidebar.js';\r\n\r\nclass Template extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const userType = this.props.userType;\r\n\r\n    return (\r\n      <div id=\"appContainer\" className=\"d-flex flex-column\">\r\n        <Banner userType={userType}/>\r\n        <div id=\"pageContentRow\" className=\"d-flex align-items-stretch flex-grow-1\">\r\n          <Sidebar userType={userType}/>\r\n          <div id=\"pageContentWrapper\" className=\"flex-grow-1\">\r\n            <div id=\"pageContent\">\r\n              { this.props.children }\r\n            </div>\r\n            <div id=\"pageContentShadow\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"footer\">\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Template;\r\n","import React, { Component } from 'react';\r\n\r\nimport { createHorizontalDivider } from './globals.js';\r\n\r\nclass Notification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dashboardNote\">\r\n        { createHorizontalDivider(6, \"detail-light\") }\r\n        <div className=\"notification\">\r\n          <a href={this.props.href}>\r\n            <h5>\r\n              {this.props.title}\r\n            </h5>\r\n          </a>\r\n          { createHorizontalDivider(2, \"background-medium\") }\r\n          <div className=\"notificationBody d-flex\">\r\n            {this.props.children}\r\n          </div>\r\n        </div>\r\n        { createHorizontalDivider(6, \"detail-light\") }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport './style/progressBar.css'\r\n\r\nclass ProgressBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.percentToColor = this.percentToColor.bind(this);\r\n  }\r\n\r\n  percentToColor(percent) {\r\n    const baseZero    = [255, 0, 0];\r\n    const baseFifty   = [223, 223, 50];\r\n    const baseHundred = [52, 220, 106];\r\n    const averageColor = []\r\n\r\n    const low  = percent < 50 ? baseZero : baseFifty;\r\n    const high = percent < 50 ? baseFifty : baseHundred;\r\n\r\n    const percentDec = percent == 100 ? 1.0 : (percent % 50.0) / 50.0;\r\n    for (let i = 0; i < 3; i++) {\r\n      let avg = high[i] * percentDec + low[i] * (1.0 - percentDec);\r\n      averageColor.push(avg);\r\n    }\r\n\r\n    return averageColor;\r\n  }\r\n\r\n  render() {\r\n    const percentFull = this.props.percent;\r\n    const barWidth = `${percentFull}%`;\r\n    const color = this.percentToColor(percentFull);\r\n    const colorStyle = `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\r\n\r\n    const fillStyle = {width: barWidth, backgroundColor: colorStyle};\r\n    const textStyle = {color: colorStyle};\r\n\r\n    let fillBarChildren = [\r\n      <div className=\"progressBarText textOverlay\">\r\n        {this.props.children}\r\n      </div>\r\n    ];\r\n    let lastChildren = [];\r\n\r\n    if (percentFull >= 70) {\r\n      fillBarChildren.push(\r\n        <div className=\"progressBarPercent textOverlay\">\r\n          {barWidth}\r\n        </div>\r\n      )\r\n    } else {\r\n      lastChildren.push(\r\n        <div className=\"progressBarPercent\" style={textStyle}>\r\n          {barWidth}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"progressBar\">\r\n        <div className=\"progressFill\" style={fillStyle}>\r\n          {fillBarChildren}\r\n        </div>\r\n        <div className=\"progressBarText\" style={textStyle}>\r\n          {this.props.children}\r\n        </div>\r\n        {lastChildren}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { Component } from 'react';\r\n\r\nimport Notification from './dashboardNotification.js';\r\nimport ProgressBar from './progressBar.js';\r\nimport { STUDENT, createHorizontalDivider, createVerticalDivider } from './globals.js';\r\n\r\n\r\nclass ReportNotification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const avgReportText = this.props.userType === STUDENT\r\n                            ? \"My Grade\"\r\n                            : \"Class Average\";\r\n    return (\r\n      <Notification title={this.props.title}\r\n                    href={this.props.href}\r\n        >\r\n        <div className=\"notificationGenerals d-flex flex-column\">\r\n          <ProgressBar percent={this.props.average}>\r\n            {avgReportText}\r\n          </ProgressBar>\r\n          { createHorizontalDivider(8, \"background-light\") }\r\n          <div className=\"notificationDescription flex-grow-1\">\r\n            {this.props.description}\r\n          </div>\r\n        </div>\r\n        { createVerticalDivider(32, \"background-light\")}\r\n        <div className=\"notificationStats\">\r\n          {this.props.children}\r\n        </div>\r\n      </Notification>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReportNotification;\r\n","import React, { Component } from 'react';\r\n\r\nimport Notification from './dashboardNotification.js';\r\nimport { createVerticalDivider } from './globals.js';\r\n\r\n\r\nclass EventNotification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const exclaimedTitle = `ACTIVE - ${this.props.title}`;\r\n\r\n    return (\r\n      <Notification title={exclaimedTitle}\r\n                    href={this.props.href}\r\n        >\r\n        <div className=\"notificationExtras\">\r\n          {this.props.children}\r\n        </div>\r\n        <div className=\"notificationDescription\">\r\n          {this.props.description}\r\n        </div>\r\n        { createVerticalDivider(12, \"background-light\")}\r\n        <div className=\"notificationMeta\">\r\n          Number of Questions: <span className=\"figure\">{this.props.meta.numQuestions}</span>\r\n          <br/>\r\n          Number of Students Writing: <span className=\"figure\">{this.props.meta.numStudents}</span>\r\n        </div>\r\n      </Notification>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EventNotification;\r\n","import React, { Component } from 'react';\r\n\r\nimport Template from './mainTemplate.js';\r\nimport ReportNotification from './reportNotification.js';\r\nimport EventNotification from './eventNotification.js';\r\nimport ProgressBar from './progressBar.js';\r\nimport { STUDENT, createHorizontalDivider, createVerticalDivider } from './globals.js';\r\nimport './style/dash.css';\r\nimport './style/sidebar.css';\r\nimport './style/banner.css';\r\nimport './style/progressBar.css';\r\nimport './style/index.css';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {name: \"Daniel\"};\r\n\r\n    this.getNotifications    = this.getNotifications.bind(this);\r\n    this.packageEventNotification  = this.packageEventNotification.bind(this);\r\n    this.packageReportNotification = this.packageReportNotification.bind(this);\r\n    this.packageNotification = this.packageNotification.bind(this);\r\n  }\r\n\r\n  getNotifications() {\r\n    return [\r\n      {\r\n        type: \"event\",\r\n        data: {\r\n          title: \"ICS2P1 Quiz 2: String Parsing\",\r\n          description: \"Description of quiz goes here...\",\r\n          href: \"#\",\r\n          meta: {\r\n            numQuestions: 12,\r\n            numStudents: 27\r\n          }\r\n        }\r\n      },\r\n      {\r\n        type: \"event\",\r\n        data: {\r\n          title: \"MPM1D3 Quiz 1: Set Theory\",\r\n          description: \"Description of quiz goes here...\",\r\n          href: \"#\",\r\n          meta: {\r\n            numQuestions: 8,\r\n            numStudents: 23\r\n          }\r\n        }\r\n      },\r\n      {\r\n        type: \"report\",\r\n        data: {\r\n          title: \"SNC1D3 Quiz 4: Matter and the Elements\",\r\n          description: \"Description of quiz goes here...\",\r\n          href: \"#\",\r\n          average: 97.57,\r\n          questions: [\r\n            {\r\n              name: \"Question 5\",\r\n              score: 24.31\r\n            },\r\n            {\r\n              name: \"Question 2\",\r\n              score: 41.20\r\n            },\r\n            {\r\n              name: \"Question 3\",\r\n              score: 47.84\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  packageEventNotification(notification) {\r\n    return (\r\n      <EventNotification title={notification.title}\r\n                         description={notification.description}\r\n                         href={notification.href}\r\n                         meta={notification.meta}\r\n                         userType={this.props.userType}\r\n      />\r\n    );\r\n  }\r\n\r\n  packageReportNotification(notification) {\r\n    const firstThreeQuestions = notification.questions.slice(0, 3);\r\n    const children = firstThreeQuestions.map((question) => (\r\n      <ProgressBar percent={question.score}>\r\n        {question.name}\r\n      </ProgressBar>\r\n    ));\r\n\r\n    return (\r\n      <ReportNotification title={notification.title}\r\n                          description={notification.description}\r\n                          href={notification.href}\r\n                          average={notification.average}\r\n                          userType={this.props.userType}\r\n        >\r\n        {children}\r\n      </ReportNotification>\r\n    );\r\n  }\r\n\r\n  packageNotification(notification) {\r\n    if (notification.type === \"event\") {\r\n      return this.packageEventNotification(notification.data);\r\n    } else if (notification.type === \"report\") {\r\n      return this.packageReportNotification(notification.data);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const notifications = this.getNotifications();\r\n    const notificationElements = notifications.map(this.packageNotification);\r\n\r\n    return (\r\n      <Template userType={this.props.userType}>\r\n        <div id=\"dashHeader\" className=\"d-inline-flex align-items-stretch\">\r\n          { createVerticalDivider(12, \"detail-light\") }\r\n          { createVerticalDivider(6, \"background-light\") }\r\n          <div id=\"dashWelcomeContainer\">\r\n            <h1 id=\"dashWelcome\" className=\"stdFont textshadow\">\r\n              Welcome back, {this.state.name}! Here's what's new.\r\n            </h1>\r\n          </div>\r\n          { createVerticalDivider(6, \"background-light\") }\r\n          { createVerticalDivider(12, \"detail-light\") }\r\n        </div>\r\n        { notificationElements }\r\n      </Template>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\n\r\nconst divStyle = {\r\n    width: '500px',\r\n    marginTop: '100px',\r\n}\r\n\r\nconst headerStyle = {\r\n    marginBottom: '20px'\r\n}\r\n\r\nconst buttonStyle = {\r\n    width: '100px'\r\n}\r\n\r\nconst inputStyle = {\r\n    width: '200px'\r\n}\r\n\r\nclass SignUpScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.logIn = this.logIn.bind(this);\r\n    }\r\n\r\n    logIn() {\r\n        this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mx-auto\" style={divStyle} align=\"center\">\r\n               <form>\r\n                     <h1 style={headerStyle}>Enter your details below:</h1>\r\n                     <input style={inputStyle} className=\"form-control\" type=\"text\" placeholder=\"Username\" name=\"uname\"></input><br/>\r\n                     <input style={inputStyle} className=\"form-control\" type=\"password\" placeholder=\"Password\" name=\"pword\"></input><br/>\r\n                     <input style={inputStyle} className=\"form-control\" type=\"password\" placeholder=\"Confirm Password\" name=\"confirmpword\"></input><br/>\r\n                     <select className=\"form-control\" style={inputStyle}>\r\n                        <option value=\"student\">Student</option>\r\n                        <option value=\"teacher\">Teacher</option>\r\n                        <option value=\"admin\">Admin</option>\r\n                     </select><br/>\r\n                     <button className=\"btn btn-primary\" style={buttonStyle} onClick={this.logIn}>Sign Up</button>\r\n                </form> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpScreen;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/lib/Button';\r\nimport Tabs from 'react-bootstrap/lib/Tabs';\r\nimport Tab from 'react-bootstrap/lib/Tab';\r\nimport Form from 'react-bootstrap/lib/Form';\r\nimport Col from 'react-bootstrap/lib/Col';\r\nimport Row from 'react-bootstrap/lib/Row';\r\nimport ListGroup from 'react-bootstrap/lib/ListGroup';\r\n\r\nimport './createquizpage.css';\r\nvar globals = require('./globals');\r\n\r\nclass CreateQuizPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        /*here we would get the data from the database*/\r\n        this.state = {\r\n            quizzes: globals.quiz_data\r\n        }\r\n    }\r\n\r\n    addQuiz(title){\r\n        let new_quizzes_array = this.state.quizzes;\r\n        new_quizzes_array.push({title: title, questions: []});\r\n        this.setState({quizzes: new_quizzes_array});\r\n        //do server request here after \"optimistic\" UI update\r\n        //we just use a global variable for this phase\r\n        globals.quiz_data.data = new_quizzes_array;\r\n    }\r\n\r\n    render(){\r\n        return( \r\n            <div className=\"createquiz_container\">\r\n                <Tabs defaultActiveKey=\"question\" id=\"uncontrolled-tab-example\">\r\n                    <Tab eventKey=\"quiz\" title=\"New Quiz\" >\r\n                        <div id=\"newquiz_container\">\r\n                            <CreatequizForm createQuiz={this.addQuiz.bind(this)}/>\r\n                        </div>\r\n                    </Tab>\r\n                    <Tab eventKey=\"question\" title=\"Modify Questions\" >\r\n                        <div id=\"showquizzes_container\">\r\n                            <CreatequestionForm quizzes={this.state.quizzes}/>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass CreatequizForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {title: \"\"}\r\n    }\r\n\r\n    setTitle(newtitle){\r\n        this.setState({title: newtitle});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Form.Group as={Row} controlId=\"formHorizontalTitle\">\r\n                    <Form.Label column sm={2}>\r\n                        Title\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control value={this.state.title} onChange={(event)=>this.setTitle(event.target.value)} type=\"text\" placeholder=\"Title\" />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={() => \r\n                    {\r\n                        this.props.createQuiz(this.state.title)\r\n                        this.setTitle(\"\");\r\n                    }}>\r\n                    Create quiz\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass CreatequestionForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selectedIndex: -1, \r\n            selectedQuiz: 0, \r\n            selectedCheckbox: -1,\r\n            questionTitle: \"\",\r\n            choiceValues: [\"\",\"\",\"\",\"\"],\r\n            quizzes: props.quizzes,\r\n        }\r\n    }\r\n\r\n    changeActiveQuestion(index){\r\n        if(index == -1){ \r\n            //changing to \"add question\" mode, reset the \"selected question\" index\r\n            // and the selected checkbox\r\n            this.setState({\r\n                selectedIndex: index, \r\n                selectedCheckbox: index,\r\n                choiceValues: [\"\",\"\",\"\",\"\"], \r\n                questionTitle: \"\"\r\n            });\r\n        }\r\n        else{\r\n            const activeQuiz = this.props.quizzes[this.state.selectedQuiz];\r\n            if(activeQuiz == null) return;\r\n            const activeIndex = activeQuiz.questions[index].correct_index;\r\n            this.setState({selectedIndex: index, \r\n                selectedCheckbox: activeIndex, \r\n                questionTitle: activeQuiz.questions[index].question,\r\n                choiceValues: activeQuiz.questions[index].choices});\r\n        }\r\n    }\r\n\r\n    deleteQuestion(index){\r\n        const selectedQuiz = this.state.selectedQuiz;\r\n        const activeQuestionIndex = this.state.selectedIndex;\r\n        let new_quizzes_array = this.props.quizzes;\r\n        new_quizzes_array[selectedQuiz].questions.splice(index, 1);\r\n        //make sure that you clear the modify field in case the deleted question is displayed there\r\n        this.setState({selectedIndex: -1, quizzes: new_quizzes_array});\r\n        //do server request here after \"optimistic\" UI update\r\n        //we just use a global variable for this phase\r\n        globals.quiz_data.data = new_quizzes_array;\r\n    }\r\n\r\n    addQuestion(event){\r\n        event.preventDefault();\r\n        const selectedQuiz = this.state.selectedQuiz;\r\n        let new_quizzes_array = this.props.quizzes;\r\n        const new_question = {\r\n            question: this.state.questionTitle,\r\n            choices: this.state.choiceValues,\r\n            correct_index: this.state.selectedCheckbox,\r\n            }\r\n        new_quizzes_array[selectedQuiz].questions.push(new_question)\r\n        this.setState({\r\n            quizzes: new_quizzes_array, \r\n            selectedCheckbox: -1,\r\n            choiceValues: [\"\",\"\",\"\",\"\"], \r\n            questionTitle: \"\"\r\n        });\r\n        //do server request here after \"optimistic\" UI update\r\n        //we just use a global variable for this phase\r\n        globals.quiz_data.data = new_quizzes_array;\r\n    }\r\n\r\n    modifyQuestion(event, index){\r\n        event.preventDefault();\r\n        const selectedQuiz = this.state.selectedQuiz;\r\n        const activeQuestionIndex = this.state.selectedIndex;\r\n        let new_quizzes_array = this.props.quizzes;\r\n        const new_question = {\r\n            question: this.state.questionTitle,\r\n            choices: this.state.choiceValues,\r\n            correct_index: this.state.selectedCheckbox,\r\n            }\r\n        new_quizzes_array[selectedQuiz].questions[activeQuestionIndex] = new_question;\r\n        this.setState({quizzes: new_quizzes_array});\r\n        //do server request here after \"optimistic\" UI update\r\n        //we just use a global variable for this phase\r\n        globals.quiz_data.data = new_quizzes_array;\r\n    }\r\n\r\n    changeActiveQuiz(event){\r\n        this.setState({selectedQuiz: event.target.value})\r\n    }\r\n\r\n    handleSelect(event){\r\n        //need to set selectedCheckbox index to an integer value\r\n        this.setState({selectedCheckbox: event.target.value*1})\r\n    }\r\n\r\n    handleChangeTitle(event){\r\n        this.setState({questionTitle: event.target.value})\r\n    }\r\n\r\n    handleChangeChoice(event, index){\r\n        let choiceValues = this.state.choiceValues;\r\n        choiceValues[index] = event.target.value;\r\n        this.setState({choiceValues: choiceValues})\r\n    }\r\n\r\n    render(){\r\n        const selectedQuiz = this.state.selectedQuiz;\r\n        const activeQuestionIndex = this.state.selectedIndex;\r\n        const hasActiveQuestion = (activeQuestionIndex !== -1);\r\n        const activeQuiz = this.props.quizzes[selectedQuiz];\r\n        return(\r\n        <Form>\r\n            <Form.Group as={Row} controlId=\"formGridState\">\r\n                <Form.Label column sm={2}>\r\n                    Quiz\r\n                </Form.Label>\r\n                <Form.Control as=\"select\" sm={5} bsPrefix=\"select_quiz\" value={selectedQuiz} onChange={(event, index) => {this.changeActiveQuiz(event);}}>\r\n                    {this.props.quizzes.map((quiz, index) => {\r\n                        return (\r\n                            <option value={index} key={index}>{quiz.title}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"formHorizontalQuestions\">\r\n                <Form.Label column sm={2}>\r\n                    Questions\r\n                </Form.Label>\r\n                <QuestionsList \r\n                    questions={activeQuiz.questions} \r\n                    changeActiveQuestion={this.changeActiveQuestion.bind(this)}\r\n                    deleteQuestion={this.deleteQuestion.bind(this)}\r\n                    />\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"formHorizontalQuestions\">\r\n                <Form.Label column sm={2}>\r\n                    <b>{(!hasActiveQuestion) ? \"Add\" : \"Modify\"} question</b>\r\n                </Form.Label>\r\n                {(hasActiveQuestion) ? \r\n                    <Form.Label column sm={6}>\r\n                       <Form.Control onChange={(event)=>{this.handleChangeTitle(event)}} \r\n                            value={this.state.questionTitle} \r\n                            placeholder={this.props.quizzes[selectedQuiz].questions[activeQuestionIndex].question}/>\r\n                    </Form.Label>\r\n                :   <Form.Label column sm={4}>\r\n                        <Form.Control onChange={(event)=>{this.handleChangeTitle(event)}} \r\n                            value={this.state.questionTitle} \r\n                            placeholder=\"type question\"/>\r\n                    </Form.Label>\r\n                }\r\n                {(hasActiveQuestion) ? \r\n                    <Form.Label column sm={2}>\r\n                        <a id=\"changeMode_link\" onClick={()=>{this.changeActiveQuestion(-1)}}>Add new question instead</a>\r\n                    </Form.Label>\r\n                : \"\"\r\n                }\r\n\r\n            </Form.Group>\r\n            <Form.Row>\r\n            {\r\n                [\"A\",\"B\",\"C\",\"D\"].map((letter, index) => {\r\n\r\n                    const choices = hasActiveQuestion ? activeQuiz.questions[activeQuestionIndex].choices : [];\r\n                    return (\r\n                        <Form.Group key={index} as={Col} controlId=\"formGridZip\">\r\n                            <Form.Label>{\"choice \"+letter}</Form.Label>\r\n                            <Form.Control onChange={(event)=>{this.handleChangeChoice(event, index)}}\r\n                                value={this.state.choiceValues[index]}\r\n                                placeholder={hasActiveQuestion ? choices[index] : \"type choice\"} />\r\n                        </Form.Group>\r\n                    )\r\n                })\r\n            }\r\n            </Form.Row>\r\n        <fieldset>\r\n            <Form.Group as={Row}>\r\n                <Form.Label as=\"legend\" column sm={2}>\r\n                    Correct answer\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                    {\r\n                        [\"A\",\"B\",\"C\",\"D\"].map((letter, index) => {\r\n                            return (\r\n                                <Form.Check\r\n                                    key={index}\r\n                                    value={index}\r\n                                    type=\"radio\"\r\n                                    label={\"choice \"+letter}\r\n                                    name=\"formHorizontalRadios\"\r\n                                    id=\"formHorizontalRadios1\"\r\n                                    checked={index === this.state.selectedCheckbox}\r\n                                    onChange={(event) => {this.handleSelect(event);}}\r\n                                />\r\n                                )\r\n                        })\r\n                    }\r\n                </Col>\r\n            </Form.Group>\r\n        </fieldset>\r\n            <Button variant=\"primary\" \r\n                type=\"submit\" \r\n                onClick={hasActiveQuestion ? (event)=>this.modifyQuestion(event) : (event)=>this.addQuestion(event)}>\r\n                {hasActiveQuestion ? \"Modify\" : \"Add\"} question\r\n            </Button>\r\n        </Form>\r\n    )}\r\n}\r\n\r\nclass QuestionsList extends React.Component{\r\n    render(){\r\n        if(this.props.questions.length == 0){\r\n            return (\r\n                <ListGroup>\r\n                    <ListGroup.Item key={0}>No questions added</ListGroup.Item>\r\n                </ListGroup>);\r\n        }\r\n        return (\r\n            <ListGroup>\r\n                {this.props.questions.map((question, index) => {\r\n                    return (\r\n                        <ListGroup.Item key={index}>\r\n                            <span className=\"question_list_text\">{question.question}</span>\r\n                            <span className=\"question_list_button\">\r\n                                <Button variant=\"outline-secondary\" onClick={() => {this.props.changeActiveQuestion(index)}}>Modify</Button>\r\n                            </span>\r\n                            <span className=\"question_list_button\">\r\n                                <Button variant=\"outline-secondary\" onClick={() => {this.props.deleteQuestion(index)}}>Delete</Button>\r\n                            </span>\r\n                        </ListGroup.Item>\r\n                        )\r\n                })}\r\n            </ListGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateQuizPage;","import React from 'react';\r\nimport Button from 'react-bootstrap/lib/Button';\r\nimport Tabs from 'react-bootstrap/lib/Tabs';\r\nimport Tab from 'react-bootstrap/lib/Tab';\r\nimport Form from 'react-bootstrap/lib/Form';\r\nimport Col from 'react-bootstrap/lib/Col';\r\nimport Row from 'react-bootstrap/lib/Row';\r\nimport Jumbotron from 'react-bootstrap/lib/Jumbotron';\r\n\r\nimport './answerpage.css'\r\nvar globals = require('./globals');\r\n\r\nclass AnswerPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        /*here we would get the data from the database*/\r\n        /*or we pass it as props from a higher order component that gets the data for us*/\r\n        this.state = {\r\n            quizzes: globals.quiz_data,\r\n            selectedIndex: -1, \r\n            selectedQuiz: 0, \r\n            selectedCheckbox: -1,\r\n            score: 0,\r\n            progress: 0,\r\n            answers: [],\r\n        }\r\n    }\r\n    \r\n    startQuiz(){\r\n        this.setState({selectedIndex: 0, progress: 0, score: 0, answers: []});\r\n    }\r\n\r\n    changeActiveQuiz(event){\r\n        let quizId = event.target.value;\r\n        this.setState({selectedQuiz: quizId})\r\n    }\r\n\r\n    handleSelect(event){\r\n        //need to set selectedCheckbox index to an integer value\r\n        this.setState({selectedCheckbox: event.target.value*1})\r\n    }\r\n\r\n    checkAnswer(event){\r\n        const answer = this.state.selectedCheckbox;\r\n        const selectedQuiz = this.state.selectedQuiz;\r\n        const activeQuestionIndex = this.state.selectedIndex;\r\n        const activeQuiz = this.state.quizzes[selectedQuiz];\r\n        const activeQuestion = activeQuiz.questions[activeQuestionIndex];\r\n        /*check if answer is correct*/\r\n        const expectedAnswer = activeQuestion.correct_index;\r\n        let new_score = this.state.score;\r\n        const isCorrect = expectedAnswer === answer;\r\n        /*Check that one choice is selected*/\r\n        if(answer === -1){\r\n            alert(\"Please choose an answer!\");\r\n            return false;\r\n        }\r\n        if(isCorrect){\r\n            new_score = new_score+1;\r\n        }\r\n        else{\r\n            let correct_answer = activeQuestion.choices[expectedAnswer];\r\n            alert(\"The correct answer was '\"+correct_answer+\"'.\");\r\n        }\r\n        const new_progress = this.state.progress+1;\r\n        const isFinished = this.state.selectedIndex+1 == activeQuiz.questions.length;\r\n        const new_index = isFinished ? -2 : this.state.selectedIndex+1;\r\n        this.setState({\r\n            score: new_score, \r\n            progress: new_progress,\r\n            selectedIndex: new_index,\r\n            selectedCheckbox: -1,\r\n        })\r\n        /*do server request here to save results in the database*/\r\n        /*either after each reply or after isFinished is true*/\r\n        this.state.answers.push(isCorrect);\r\n        if(isFinished){\r\n            const result = {\r\n                userId: \"0\", /*adjust this from auth*/\r\n                total_score: this.state.score, /*verify this number on the server*/\r\n                answers: this.state.answers,\r\n            }\r\n            let results_array = globals.score_data;\r\n            results_array.push(result);\r\n            globals.score_data.data = results_array;\r\n            console.log(globals.score_data);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const selectedQuiz = this.state.selectedQuiz;\r\n        const activeQuestionIndex = this.state.selectedIndex;\r\n        const activeQuiz = this.state.quizzes[selectedQuiz];\r\n        const activeQuestion = activeQuiz.questions[activeQuestionIndex];\r\n        return( \r\n            <div className=\"createquiz_container\">\r\n                <Tabs defaultActiveKey=\"quiz\" id=\"uncontrolled-tab-example\">\r\n                    <Tab eventKey=\"quiz\" title=\"Do Quiz\" >\r\n                        <div id=\"newquiz_container\">\r\n                            <Form.Group as={Row} controlId=\"formGridState\">\r\n                                <Form.Label column sm={2}>\r\n                                    Quiz\r\n                                </Form.Label>\r\n                                <Form.Control as=\"select\" sm={5} bsPrefix=\"select_quiz\" value={selectedQuiz} onChange={(event, index) => {this.changeActiveQuiz(event);}}>\r\n                                    {this.state.quizzes.map((quiz, index) => {\r\n                                        return (\r\n                                            <option value={index} key={index}>{quiz.title}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                                <Form.Label column sm={2}>\r\n                                </Form.Label>\r\n                                <Form.Label column xs={2} >\r\n                                    Score: {this.state.score}\r\n                                </Form.Label>\r\n                                <Form.Label column xs={2} >\r\n                                    Progress: {this.state.progress}/{activeQuiz.questions.length}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            {(this.state.selectedIndex === -1) ? \r\n                                <Button bsStyle=\"primary\" onClick={()=>this.startQuiz()}>Start Quiz</Button>\r\n                            :\r\n                            (this.state.selectedIndex === -2) ? \r\n                                <div>\r\n                                    <p>You got {this.state.score} out of {activeQuiz.questions.length} questions right. Congrats!</p>\r\n                                    <Button bsStyle=\"primary\" onClick={()=>this.startQuiz()}>Restart Quiz</Button>\r\n                                </div>\r\n                            :\r\n                            <Jumbotron>\r\n                                <h2>Q{this.state.progress+1}: {activeQuestion.question}</h2>\r\n                                <fieldset>\r\n                                    <Form.Group as={Row}>\r\n                                        <Form.Label as=\"legend\" column sm={2}>\r\n                                            Choose the answer\r\n                                        </Form.Label>\r\n                                        <Col sm={10}>\r\n                                            {\r\n                                                [\"A\",\"B\",\"C\",\"D\"].map((letter, index) => {\r\n                                                    return (\r\n                                                        <Form.Check\r\n                                                            key={index}\r\n                                                            value={index}\r\n                                                            type=\"radio\"\r\n                                                            label={activeQuestion.choices[index]}\r\n                                                            name=\"formHorizontalRadios\"\r\n                                                            id=\"formHorizontalRadios1\"\r\n                                                            checked={index === this.state.selectedCheckbox}\r\n                                                            onChange={(event) => {this.handleSelect(event);}}\r\n                                                        />\r\n                                                        )\r\n                                                })\r\n                                            }\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                </fieldset>\r\n                                <p>\r\n                                    <Button bsStyle=\"primary\" onClick={(event)=>{this.checkAnswer(event)}}>Submit answer</Button>\r\n                                </p>\r\n                            </Jumbotron>}\r\n                        </div>\r\n                    </Tab>\r\n                    <Tab eventKey=\"statistics\" title=\"My Statistics\" >\r\n                        <div id=\"showquizzes_container\">\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n             </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AnswerPage;","import React from 'react';\r\nimport Chart from 'chart.js';\r\nimport './style/gradeChart.css';\r\n\r\nimport Template from './mainTemplate.js';\r\nimport ProgressBar from './progressBar.js';\r\nimport { createVerticalDivider } from './globals.js';\r\n\r\nconst chartObject = []; // array of chart(myChart, object); 2nd parameter for class Chart.\r\nvar arrayOfCorrect = []; //array of user input\r\n\r\n\r\nfunction getInputValue() {\r\n    arrayOfCorrect = document.getElementById(\"numberOfCorrect\").value.split(\",\");\r\n\r\n    if (chartObject[0].data.datasets[0].data.length == 0) {\r\n        for (let i = 0; i < arrayOfCorrect.length; i++) {\r\n            chartObject[0].data.datasets[0].data.push(arrayOfCorrect[i]);\r\n            }\r\n    }\r\n}\r\n\r\nfunction getTheMin() {\r\n    // firstly, convert the array of string (from user input) to number.\r\n    const numArray = [];\r\n    for(let i = 0; i < arrayOfCorrect.length; i++)\r\n    {\r\n        numArray.push(parseInt(arrayOfCorrect[i]));\r\n    }\r\n\r\n    // compare the number in that array.\r\n    // Note: made a mistake to compare string... (e.g. [\"12\",\"10\",\"8\",\"5\"] instead of [12,10,8,5])\r\n    var min = numArray[0];\r\n    for(let i = 0; i < numArray.length; i++)\r\n    {\r\n        if(numArray[i] < min)\r\n        {\r\n            min = numArray[i];\r\n        }\r\n    }\r\n\r\n    // then return the i, which is index, since we want to show 'where' holds the minimum number\r\n    for(let i = 0; i < numArray.length; i++)\r\n    {\r\n        if(numArray[i] === min)\r\n        {\r\n            return i+1;\r\n        }\r\n    }\r\n}\r\n\r\n// DOM function to append text to HTML page.\r\nfunction whichQuestionIsHard() {\r\n    const qString = \"The hardest question of this quiz is #\" + getTheMin();\r\n    const a = document.getElementById(\"outputMessage\");\r\n    a.appendChild(document.createTextNode(qString));\r\n}\r\n\r\n\r\nexport class GradeChart extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.getQuizData = this.getQuizData.bind(this);\r\n        this.getChart = this.getChart.bind(this);\r\n        this.createGraph = this.createGraph.bind(this);\r\n        this.createPerformanceGraphs = this.createPerformanceGraphs.bind(this);\r\n        this.resetPerformance = this.resetPerformance.bind(this);\r\n\r\n        this.state = {\r\n          quizData: {\r\n            name: \"\",\r\n            average: 100,\r\n            attendance: 0,\r\n            enrolment: 0\r\n          },\r\n          performanceGraphs: []\r\n        };\r\n    }\r\n\r\n    getQuizData(quizNum) {\r\n      return {\r\n        name: \"Matter and the Elements\",\r\n        average: 97.59,\r\n        attendance: 27,\r\n        enrolment: 36,\r\n        questions: [\r\n          {\r\n            name: \"Question 1\",\r\n            text: \"Question Text Here\",\r\n            topics: [],\r\n            answers: [\r\n              {\r\n                key: \"a\",\r\n                text: \"Answer (a)\",\r\n                chosenBy: 18\r\n              },\r\n              {\r\n                key: \"c\",\r\n                text: \"Answer (b)\",\r\n                chosenBy: 5\r\n              },\r\n              {\r\n                key: \"d\",\r\n                text: \"Answer (c)\",\r\n                chosenBy: 3\r\n              },\r\n              {\r\n                key: \"b\",\r\n                text: \"Answer (b)\",\r\n                chosenBy: 1\r\n              }\r\n            ],\r\n            correct: [\"a\"]\r\n          },\r\n          {\r\n            name: \"Question 2\",\r\n            text: \"Question Text Here\",\r\n            topics: [],\r\n            answers: [\r\n              {\r\n                key: \"c\",\r\n                text: \"Answer (c)\",\r\n                chosenBy: 26\r\n              },\r\n              {\r\n                key: \"b\",\r\n                text: \"Answer (b)\",\r\n                chosenBy: 1\r\n              }\r\n            ],\r\n            correct: [\"c\"]\r\n          },\r\n        ]\r\n      }\r\n    }\r\n\r\n    getChart(quizName, chartContainer, question) {\r\n      const answerKeys = question.answers.map((answer) => answer.key);\r\n      const data = question.answers.map((answer) => answer.chosenBy);\r\n      const colorOptions = [\"red\", \"yellow\", \"blue\", \"green\", \"orange\",\r\n                            \"purple\", \"aqua\", \"blueviolet\", \"coral\",\r\n                            \"greenyellow\"];\r\n\r\n      return new Chart(chartContainer, {\r\n          type: \"pie\",\r\n          data: {\r\n              labels: answerKeys,\r\n              datasets: [{\r\n                  label: \"class result\",\r\n                  data: data,\r\n                  backgroundColor: colorOptions.splice(0, question.answers.length)\r\n              }]\r\n          },\r\n          options: {\r\n              title: {\r\n                  display: true,\r\n                  text: `${question.name} Performance`,\r\n                  fontSize: 25,\r\n              },\r\n              legend: {\r\n                  position: \"right\",\r\n              }\r\n          },\r\n      });\r\n    }\r\n\r\n  createGraph(question, title) {\r\n    const container = document.getElementById(\"performanceStats\");\r\n    const chartHolder = document.createElement(\"canvas\");\r\n    chartHolder.classList.add(\"performanceGraph\");\r\n    container.appendChild(chartHolder);\r\n\r\n    this.state.performanceGraphs.push(this.getChart(title, chartHolder, question));\r\n  }\r\n\r\n  createPerformanceGraphs(title) {\r\n    this.state.quizData.questions.map((question) => this.createGraph(question, title));\r\n  }\r\n\r\n  resetPerformance() {\r\n    const container = document.getElementById(\"performanceList\");\r\n    while (container.children.length > 0) {\r\n      const child = container.children[0];\r\n      container.removeChild(child);\r\n    }\r\n\r\n    this.state.performanceGraphs = [];\r\n  }\r\n\r\n  componentDidMount() {\r\n    const quizNum = this.props.match.params.quizNum;\r\n    const courseName = this.props.match.params.course;\r\n    const quizTitle = `Quiz ${quizNum}: ${courseName}`;\r\n\r\n    this.state.quizData = this.getQuizData(quizTitle);\r\n    this.createPerformanceGraphs(quizTitle);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Template userType={this.props.userType}>\r\n        <div id=\"classStatsHeader\">\r\n          <h1>\r\n            Quiz {this.props.match.params.quizNum}: {this.state.quizData.name}\r\n          </h1>\r\n          <h3>\r\n            Performance\r\n          </h3>\r\n          <div id=\"classInfo\" className=\"d-flex\">\r\n            <ProgressBar percent={this.state.quizData.average}>\r\n              Class Average\r\n            </ProgressBar>\r\n            { createVerticalDivider(24, \"background-light\") }\r\n            <ProgressBar percent={this.state.quizData.attendance / this.state.quizData.enrolment * 100}>\r\n              Attendance\r\n            </ProgressBar>\r\n          </div>\r\n          <div id=\"performanceStats\" className=\"container\">\r\n          </div>\r\n        </div>\r\n      </Template>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Chart from 'chart.js';\r\nimport PopperJs from 'popper.js';\r\nimport Button from 'react-bootstrap/lib/Button';\r\n\r\nimport Template from './mainTemplate.js';\r\n\r\nexport class StudentSummaryChart extends React.Component{\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {};\r\n\r\n      this.resetChart = this.resetChart.bind(this);\r\n      this.createChart = this.createChart.bind(this);\r\n      this.loadChart = this.loadChart.bind(this);\r\n  }\r\n\r\n  createChart(course, quizNum) {\r\n    let myChart = document.getElementById(\"myChart\").getContext(\"2d\");\r\n    return new Chart(myChart, {\r\n      type: \"pie\",\r\n      data: {\r\n        labels: [\"chapter1\", \"chapter2\", \"chapter3\", \"chapter4\", \"chapter5\", \"chapter6\", \"chapter7\", \"chapter8\", \"chapter9\", \"chapter10\"],\r\n        datasets: [{\r\n          label: \"Grades (out of 10)\",\r\n          data: [0.7, 0.8, 1.0, 1.0, 0.5, 0.6, 0.9, 1.0, 0.4, 0.8],\r\n          backgroundColor: [\"red\", \"yellow\", \"blue\", \"green\", \"orange\", \"purple\", \"aqua\", \"blueviolet\", \"coral\", \"greenyellow\"],\r\n          borderWidth: 0,\r\n        }]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: `${course} Quiz ${quizNum} Performance`,\r\n          fontSize: 25,\r\n        },\r\n        legend: {\r\n          position: \"right\",\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  loadChart() {\r\n    const courseName = this.props.match.params.course;\r\n    const quizNum = document.getElementById(\"quizInput\").value;\r\n\r\n    this.state.barChart = this.createChart(courseName, quizNum);\r\n  }\r\n\r\n  resetChart() {\r\n    const chart = document.getElementById(\"myChart\");\r\n\r\n    if (chart != undefined) {\r\n      const parent = chart.parentElement;\r\n\r\n      const newChart = document.createElement(\"canvas\");\r\n      newChart.id = \"myChart\";\r\n\r\n      parent.removeChild(chart);\r\n      parent.appendChild(newChart);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    this.resetChart();\r\n\r\n    return(\r\n      <Template userType={this.props.userType}>\r\n        <input id=\"quizInput\" placeholder=\"Enter a Quiz Number\"/>\r\n        <Button onClick={this.loadChart}>\r\n          Display Quiz Performance:\r\n        </Button>\r\n        <div className=\"container\">\r\n          <canvas id=\"myChart\"></canvas>\r\n        </div>\r\n      </Template>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentSummaryChart;\r\n","import React, { Component } from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport WelcomeScreen from \"./welcomeScreen.js\";\r\nimport LogInScreen from \"./logInScreen.js\";\r\nimport Dashboard from \"./dashboard.js\";\r\nimport SignUpScreen from \"./signUpScreen.js\";\r\nimport CreateQuizPage from \"./createQuizPage.js\";\r\nimport AnswerPage  from \"./answerPage.js\"\r\nimport { GradeChart } from \"./GradeChart.js\";\r\nimport { StudentSummaryChart } from \"./StudentSummaryChart.js\";\r\nimport { STUDENT, EDUCATOR, ADMIN } from \"./globals.js\";\r\n\r\n\r\nlet userType = STUDENT;\r\nfunction setUserType(newUserType) {\r\n  userType = newUserType;\r\n}\r\n\r\nclass Router extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={WelcomeScreen}/>\r\n                    <Route path=\"/logIn\" exact component={LogInScreen}/>\r\n                    }/>\r\n                    <Route path=\"/signUp\" exact render={\r\n                      () => <SignUpScreen setUserType={setUserType}/>\r\n                    }/>\r\n                    <Route path=\"/:course/:quizNum/gradeChart\" render={\r\n                      (props) => <GradeChart userType={userType} {...props}/>\r\n                    }/>\r\n                    <Route path=\"/:course/studentSummary\" render={\r\n                      (props) => <StudentSummaryChart userType={userType} {...props}/>\r\n                    }/>\r\n                    <Route path=\"/dashboard\" exact render={() => <Dashboard userType={EDUCATOR}/>} />\r\n                    <Route path=\"/dashboardStudent\" exact render={()=><Dashboard userType={STUDENT}/>} />\r\n                    <Route path=\"/dashboardAdmin\" exact render={()=><Dashboard userType={ADMIN}/>} />\r\n                    <Route path=\"/dashboardEducator\" exact render={()=><Dashboard userType={EDUCATOR}/>} />\r\n                    <Route path=\"/createQuiz\" exact component={CreateQuizPage}/>\r\n                    <Route path=\"/answerPage\" exact component={AnswerPage}/>\r\n                </Switch>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Router from './router.js';\r\nimport './style/index.css';\r\n\r\nconst rootElem = (\r\n  <Router />\r\n);\r\nReactDOM.render(rootElem, document.getElementById('root'));\r\n","import React from 'react';\r\n\r\nfunction QuizData() {\r\n  Object.defineProperty(this, 'data', {\r\n    get: function() {\r\n      return quiz_data;\r\n    },\r\n    set: function(value) {\r\n      quiz_data = value;\r\n    }\r\n  });\r\n}\r\nvar quiz_data = new QuizData();\r\nquiz_data.data = [\r\n  {\r\n      title: \"Quiz 1 - historical battles\",\r\n      questions: [\r\n          {\r\n              question: \"Where was the battle of Culloden?\",\r\n              choices: [\"England\", \"Scottland\", \"Canada\", \"USA\"],\r\n              correct_index: 1,\r\n          },\r\n          {\r\n              question: \"When was the battle of the Somme?\",\r\n              choices: [\"1916\", \"2001\", \"1943\", \"1945\"],\r\n              correct_index: 0,\r\n          },\r\n      ]\r\n  },\r\n  {\r\n      title: \"Quiz 2 - famous people\",\r\n      questions: [\r\n          {\r\n              question: \"Who invented the induction motor?\",\r\n              choices: [\"Nikola Tesla\", \"Elon Musk\", \"Thomas Edison\", \"Bill Gates\"],\r\n              correct_index: 0,\r\n          },\r\n          {\r\n              question: \"Who was the 40th president of the US?\",\r\n              choices: [\"Donald Trump\", \"Barack Obama\", \"Ronald Reagan\", \"Jimmy Carter\"],\r\n              correct_index: 2,\r\n          },\r\n      ]\r\n  }\r\n]\r\n\r\nfunction ScoreData() {\r\n  Object.defineProperty(this, 'data', {\r\n    get: function() {\r\n      return score_data;\r\n    },\r\n    set: function(value) {\r\n      score_data = value;\r\n    }\r\n  });\r\n}\r\nvar score_data = new ScoreData();\r\nscore_data.data = []\r\n\r\nconst STUDENT  = \"S\";\r\nconst EDUCATOR = \"T\";\r\nconst ADMIN    = \"A\";\r\n\r\nfunction translateUserType(user) {\r\n  if (user === STUDENT) {\r\n    return \"Student\";\r\n  } else if (user === EDUCATOR) {\r\n    return \"Teacher\";\r\n  } else if (user === ADMIN) {\r\n    return \"Admin\";\r\n  }\r\n}\r\n\r\nfunction createHorizontalDivider(height, color) {\r\n  const colorVar = `var(--${color})`;\r\n  return (\r\n    <div className=\"horDivider\"\r\n         style={{backgroundColor: colorVar, height: height}}>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction createVerticalDivider(width, color) {\r\n  const colorVar = `var(--${color})`;\r\n  return (\r\n    <div className=\"vertDivider\"\r\n         style={{backgroundColor: colorVar, width: width}}>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  quiz_data,\r\n  score_data,\r\n  STUDENT,\r\n  EDUCATOR,\r\n  ADMIN,\r\n  translateUserType as userType,\r\n  createHorizontalDivider,\r\n  createVerticalDivider\r\n};\r\n"],"sourceRoot":""}