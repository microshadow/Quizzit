{"version":3,"sources":["globals.js","welcomeScreen.js","backend.js","logInScreen.js","banner.js","sidebar.js","mainTemplate.js","dashboardNotification.js","progressBar.js","reportNotification.js","eventNotification.js","dashboard.js","signUpScreen.js","createQuizPage.js","answerPage.js","pieChart.js","statTable.js","classQuizResults.js","studentQuizResults.js","studentCourseSummary.js","studentSummary.js","createCourse.js","addStudentPage.js","router.js","index.js","media/QuizzitLogoHorizontal.png"],"names":["quiz_data","Object","defineProperty","this","get","set","value","data","score_data","course_data","STUDENT","EDUCATOR","ADMIN","registerAuthToken","token","user","localStorage","setItem","JSON","stringify","axios","defaults","headers","common","getAuthorizedUser","parse","getItem","trashAuthToken","removeItem","createHorizontalDivider","height","color","colorVar","concat","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","style","backgroundColor","createVerticalDivider","width","nRange","n","_toConsumableArray","Array","keys","toPercent","num","digits","toFixed","baseURL","divStyle","marginTop","button1Style","marginRight","button2Style","headerStyle","marginBottom","WelcomeScreen","props","_this","_classCallCheck","_getPrototypeOf","call","goToLogIn","bind","_assertThisInitialized","goToSignUp","React","Component","history","push","console","log","react_default","Redirect","to","pathname","state","from","location","align","onClick","Backend","url","arguments","length","undefined","backend_classCallCheck","create_quiz","title","course_id","config","weight","description","post","then","response","newState","quiz","currentKey","alert","create_question","quiz_id","question_title","choices_array","correct_choice","catch","error","start_quiz","end_quiz","answer_question","question_id","answer_choice","next_question","create_course","course","instructor","_id","courseDetails","status","get_course_data","set_course_data","add_student","username","remove_student","remove_course","courseID","setTimeout","window","reload","login","password","register","user_type","logout","get_notification","user_id","get_quiz_results","get_quiz_class_results","get_quiz","inputStyle","buttonStyle","LogInScreen","logInScreen_classCallCheck","logInScreen_getPrototypeOf","logIn","logInScreen_assertThisInitialized","backend","e","preventDefault","refs","ref","type","placeholder","Link","Banner","banner_classCallCheck","banner_getPrototypeOf","isLoggedIn","userType","logOut","banner_assertThisInitialized","makeLogo","getLoginButton","getStatsLink","src","bannerImage","id","alt","loggedIn","buttonText","href","onClickFunc","userId","initialState","setState","globals","require","Sidebar","sidebar_classCallCheck","sidebar_getPrototypeOf","deleteCourse","event","constructCourseMenu","sidebar_assertThisInitialized","getCourseDropdownLinks","getCourseListComponent","links","activeQuizzes","map","previousQuiz","text","firstOp","addStudentComponent","parentID","_this2","linkComponents","linkInfo","data-toggle","aria-haspopup","aria-expanded","courseCode","aria-labelledby","_this3","courses","baseComponents","Template","mainTemplate_classCallCheck","mainTemplate_possibleConstructorReturn","mainTemplate_getPrototypeOf","src_banner","src_sidebar","children","Notification","ProgressBar","progressBar_classCallCheck","progressBar_getPrototypeOf","percentToColor","progressBar_assertThisInitialized","percent","baseFifty","averageColor","low","high","percentDec","i","avg","percentFull","barWidth","colorStyle","fillStyle","textStyle","fillBarChildren","lastChildren","ReportNotification","avgReportText","dashboardNotification","progressBar","average","EventNotification","exclaimedTitle","meta","numQuestions","numStudents","Dashboard","dashboard_classCallCheck","dashboard_getPrototypeOf","name","notifications","getNotifications","dashboard_assertThisInitialized","packageEventNotification","packageReportNotification","packageNotification","first","last","notification","subject","eventNotification","extra","hrefBase","quizId","questions","slice","question","score","display","reportNotification","noteData","series","notificationElements","SignUpScreen","signUpScreen_classCallCheck","signUpScreen_getPrototypeOf","loginSuccessful","registerAccount","signUpScreen_assertThisInitialized","firstname","lastname","confirm","confirmpassword","userTypeSelect","options","selectedIndex","usertype","userBody","CreateQuizPageInner","createQuizPage_classCallCheck","createQuizPage_possibleConstructorReturn","createQuizPage_getPrototypeOf","active","participants","classAverage","match","params","quizzes","activeCourse","find","Tabs_default","defaultActiveKey","Tab_default","eventKey","createQuizPage_CreatequizForm","createQuiz","addQuiz","createQuizPage_CreatequestionForm","CreatequizForm","newtitle","Form_default","Group","as","Row","controlId","Label","column","sm","Col_default","Control","onChange","setTitle","target","Button_default","variant","CreatequestionForm","_this4","selectedQuiz","selectedCheckbox","questionTitle","choiceValues","publishQuiz","createQuizPage_assertThisInitialized","index","activeQuiz","activeIndex","correct_index","choices","new_quizzes_array","splice","_this5","answerIndices","answerLabels","String","fromCharCode","answers","correctIndex","quizGen","newQuestion","correct","_this6","activeQuestionIndex","new_question","_this7","hasActiveQuestion","bsPrefix","changeActiveQuiz","key","handleChangeTitle","changeActiveQuestion","letter","Col","handleChangeChoice","Check","label","checked","handleSelect","modifyQuestion","addQuestion","CreateQuizPage","withRouter","AnswerPage","answerPage_classCallCheck","answerPage_possibleConstructorReturn","answerPage_getPrototypeOf","progress","answer","activeQuestion","expectedAnswer","new_score","isCorrect","correct_answer","new_progress","isFinished","new_index","result","total_score","results_array","xs","bsStyle","startQuiz","Jumbotron_default","checkAnswer","PieChart","datum","labels","correctAnswers","classNames","fill","includes","chartData","stackBars","plugins","Legend","dist_default","Table","statTable_classCallCheck","statTable_getPrototypeOf","columnHeads","createInnerElem","statTable_assertThisInitialized","createHeaders","createRow","cellMeta","headerMeta","heads","rowData","tails","tailValues","tail","generate","textLabels","dataCells","ind","cell","head","highlight","convertToObj","unit","obj","extractColHeads","aux","auxCol","colHead","cells","row","rowIndices","rows","ClassQuizResults","classQuizResults_classCallCheck","classQuizResults_getPrototypeOf","stats","attendance","performance","getPerformance","classQuizResults_assertThisInitialized","extractAttendanceRate","extractAverageGrade","getPerformanceRecord","generateQuestionStatsChart","questionNames","questionIndices","attendanceHeaders","expand","join","attendanceRows","studentData","qIndex","choiceId","choice","option","toString","studentNames","student","statTable_Table","col","qLabel","findIndex","q","answerId","grade","qStats","chosenBy","usedAnswers","filter","aIndex","answerDistr","pieChart_PieChart","quizNum","quizTitle","attendanceRate","performanceRecord","averageGrade","questionStatCharts","StudentQuizResults","studentQuizResults_classCallCheck","studentQuizResults_getPrototypeOf","getQuizResults","studentQuizResults_assertThisInitialized","loadState","qCorrect","StudentCourseSummary","studentCourseSummary_classCallCheck","studentCourseSummary_getPrototypeOf","getCourseGrades","studentCourseSummary_assertThisInitialized","createAverageBar","createPerformanceGraph","basis","expanded","StudentSummary","studentSummary_classCallCheck","studentSummary_getPrototypeOf","getStudentCourses","studentSummary_assertThisInitialized","getCourseSummaries","studentId","studentCourseSummary_StudentCourseSummary","fullName","CreateCourse","createCourse_classCallCheck","createCourse_getPrototypeOf","createCourse","createCourse_assertThisInitialized","AddStudentPage","addStudentPage_classCallCheck","addStudentPage_getPrototypeOf","addStudent","addStudentPage_assertThisInitialized","studentUsername","studentID","request","Router","BrowserRouter","Switch","Route","path","exact","component","render","logInScreen","signUpScreen","LoggedInPages","LoggedInPagesInner","router_classCallCheck","router_possibleConstructorReturn","router_getPrototypeOf","mainTemplate","studentQuizResults_StudentQuizResults","classQuizResults_ClassQuizResults","studentSummary_StudentSummary","dashboard","createQuizPage","createCourse_CreateCourse","addStudentPage_AddStudentPage","rootElem","router","ReactDOM","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ca510c90.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nfunction QuizData() {\n  Object.defineProperty(this, 'data', {\n    get: function() {\n      return quiz_data;\n    },\n    set: function(value) {\n      quiz_data = value;\n    }\n  });\n}\nvar quiz_data = new QuizData();\nquiz_data.data = [];\n\nfunction ScoreData() {\n  Object.defineProperty(this, 'data', {\n    get: function() {\n      return score_data;\n    },\n    set: function(value) {\n      score_data = value;\n    }\n  });\n}\nvar score_data = new ScoreData();\nscore_data.data = []\n\nfunction CourseData() {\n  Object.defineProperty(this, 'data', {\n    get: function() {\n      return course_data;\n    },\n    set: function(value) {\n      course_data = value;\n    }\n  });\n}\nvar course_data = new CourseData();\ncourse_data.data = []\n\nconst STUDENT  = \"S\";\nconst EDUCATOR = \"T\";\nconst ADMIN    = \"A\";\n\naxios.defaults.baseURL = \"http://vps486744.ovh.net:8000/\";\n\nfunction registerAuthToken(token, user) {\n  localStorage.setItem(\"user\", JSON.stringify(user));\n  localStorage.setItem(\"token\", token);\n  axios.defaults.headers.common['Authorization'] = 'JWT ' + token;\n}\n\nfunction getAuthorizedUser() {\n  return JSON.parse(localStorage.getItem(\"user\"));\n}\n\nfunction trashAuthToken() {\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"token\");\n  delete axios.defaults.headers.common['Authorization'];\n}\n\n// Automatically try to load in JWT token from a previous session, without\n// polluting the namespace.\n(function reloadAuthHeaders() {\n  const token = localStorage.getItem(\"token\");\n\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = 'JWT ' + token;\n  }\n})();\n\nfunction createHorizontalDivider(height, color) {\n  const colorVar = `var(--${color})`;\n  return (\n    <div className=\"horDivider\"\n         style={{backgroundColor: colorVar, height: height}}>\n    </div>\n  )\n}\n\nfunction createVerticalDivider(width, color) {\n  const colorVar = `var(--${color})`;\n  return (\n    <div className=\"vertDivider\"\n         style={{backgroundColor: colorVar, width: width}}>\n    </div>\n  )\n}\n\nfunction nRange(n) {\n  return [...Array(n).keys()];\n}\n\nfunction toPercent(num, digits) {\n  return `${num.toFixed(digits)}%`;\n}\n\nexport {\n  quiz_data,\n  score_data,\n  course_data,\n  STUDENT,\n  EDUCATOR,\n  ADMIN,\n  registerAuthToken,\n  getAuthorizedUser,\n  trashAuthToken,\n  createHorizontalDivider,\n  createVerticalDivider,\n  toPercent,\n  nRange\n};\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { getAuthorizedUser } from './globals.js';\n\nconst divStyle = {\n    width: '400px',\n    marginTop: '200px',\n}\n\nconst button1Style = {\n    marginRight: '20px',\n    width: '100px'\n}\n\nconst button2Style = {\n    width: '100px'\n}\n\nconst headerStyle = {\n    marginBottom: '20px',\n}\n\nclass WelcomeScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.goToLogIn = this.goToLogIn.bind(this);\n        this.goToSignUp = this.goToSignUp.bind(this);\n    }\n\n    goToLogIn() {\n        this.props.history.push(\"/logIn\");\n    }\n\n    goToSignUp() {\n        this.props.history.push(\"/signUp\");\n    }\n\n    render() {\n        const user = getAuthorizedUser();\n        if(user){\n            console.log(this.props);\n            return (\n                <Redirect\n                    to={{\n                    pathname: \"/dashboard\",\n                    state: { from: this.props.location }\n                    }}\n                />\n            );\n        }\n        return (\n            <div className=\"mx-auto\" align=\"center\" style={divStyle}>\n                <h1 style={headerStyle} >Welcome to Quizzit</h1>\n                <button className=\"btn btn-primary\" style={button1Style} onClick={this.goToLogIn}>Log In</button>\n                <button className=\"btn btn-primary\" style={button2Style} onClick={this.goToSignUp}>Sign Up</button>\n            </div>\n        );\n    }\n}\n\nexport default WelcomeScreen;\n","import axios from 'axios';\nimport { getAuthorizedUser, trashAuthToken, registerAuthToken } from './globals.js';\n\nexport default class Backend {\n    constructor(url = \"\") {\n        this.url = url;\n      }\n\n    // Create Quiz API -- Jonathan\n    // POST: \n    create_quiz = (title, course_id, description = \"\") => {\n        const config = {\n            title: title,\n            weight: 1,\n            description: description\n          };\n    \n        axios.post(`/api/quizzes/${course_id}`, config)\n            .then((response) => {\n        const newState = {\n            quiz: response.data,\n            currentKey: \"question\"\n        };\n        alert(\"Quiz was successfully created!!\")\n        return newState;\n        });\n    } \n\n    create_question = (quiz_id, question_title, choices_array, correct_choice) => {\n        axios.post(this.url, {\n            quiz_id, \n            question_title, \n            choices_array, \n            correct_choice\n          })\n        .then(function (response) {\n            // handle success\n            // returns quiz object \n            console.log(response);\n            return response;\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        });\n    }\n\n    // use express-ws to notify students in realtime \n    start_quiz = (quiz_id) => {\n        axios.post(this.url, {\n            quiz_id, \n          })\n        .then(function (response) {\n            // handle success\n            // quiz object\n            // students can see the quiz after that \n            console.log(response);\n            return response;\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        });\n    }\n        \n    end_quiz = (quiz_id) => {\n        axios.post(this.url, {\n            quiz_id, \n          })\n        .then(function (response) {\n            // handle success\n            // quiz object \n            // quiz will become unavailable for students\n            console.log(response);\n            return response;\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        });     \n    } \n    \n    // Do Quiz API -- Jonathan\n    // POST: \n    answer_question = (quiz_id, question_id, answer_choice) => {\n        // => returns if correct \n    }\n\n    // GET\n    next_question = (quiz_id, question_id) => {\n        // => returns next question object\n        axios.get(this.url+`?quiz_id=${quiz_id}&question_id=${question_id}`)\n        .then(function (response) {\n            // handle success\n            console.log(response);\n            return response;\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n    }\n\n    // Course API\n    // POST: \n    create_course = (title) => {\n        // returns course object\n        const course = title;\n        const user = getAuthorizedUser();\n        const instructor = user._id;\n        if (!course) {\n            alert(\"Please enter a valid course code\")\n        } else {\n            const courseDetails = {course,instructor};\n            axios.post(this.url + '/api/courses/', courseDetails).then((response) => {\n                const status = response.status;\n\n                if (status === 201) {\n                    console.log(\"Course successfully added\");\n                    alert(\"Course successfully added\");\n                } else {\n                    alert(\"Course could not be created\");\n                }\n\n            })\n        }\n    }  \n\n    get_course_data = () => {\n        axios.get(this.url)\n        .then(function (response) {\n            // handle success\n            // returns quiz object \n            console.log(response);\n            return { response };\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n            return [];\n        });\n    }\n\n    set_course_data = (data) => {\n        axios.post(this.url, data)\n        .then(function (response) {\n            // handle success\n            // returns quiz object \n            console.log(response);\n            return { response };\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n            return [];\n        });\n    }\n\n    \n    add_student = (course_id, username) => {\n        // => course object \n    }\n        \n    remove_student = (course_id, username) => {\n        // => course object \n    }\n\n    // DELETE: \n    remove_course = (courseID) => {\n        console.log(courseID);\n        // returns course object\n        const course = courseID;\n        const user = getAuthorizedUser();\n        const instructor = user._id;\n        if (!course) {\n            alert(\"Please enter a valid course code\")\n        } else {\n            const courseDetails = {courseID, instructor};\n            axios.post(this.url + '/api/courses/delete/', courseDetails).then((response) => {\n                const status = response.status;\n\n                if (status === 201) {\n                    console.log(\"Course successfully deleted.\");\n                    alert(\"Course successfully deleted.\");\n                    setTimeout(function(){\n                        window.location.reload();\n                    },100);\n                } else {\n                    alert(\"Course could not be deleted.\");\n                }\n\n            })\n        }\n    }\n\n    // Auth API using Express and Passport.js -- Alex\n    login = (username, password, history) => {\n        // => returns JWT token, and user_type \n        if (username && password) {\n            axios.post(\"/login\", { username, password }).then((response) => {\n              const status = response.status;\n              console.log(\"Printing Log In status\");\n              console.log(response.status);\n              if (status === 200) {\n                const token = response.data.token;\n                const user  = response.data.user;\n                console.log(user);\n                registerAuthToken(token, user);\n                history.push(\"/dashboard\");\n              }\n            }).catch((error) => {\n              console.log(error)\n              alert(\"Incorrect username or password.\");\n            });\n          } else {\n            alert(\"Username or password not provided.\");\n          }\n    }\n    \n    register = (username, password, user_type) => {\n        // => returns JWT token, and user_type \n    }\n\n    logout = () => {\n        trashAuthToken();\n    }\n\n    // Dashboard/Data API \n    // when you click open dashboard button or when you login or click refresh button -- Alex\n    // GET: \n    get_notification = (user_id) => {\n        // returns notifications \n    } \n\n    get_quiz_results = (quiz_id, user_id) => {\n        // => returns all completed questions \n    } \n    \n    get_quiz_class_results = (quiz_id) => {\n        // => returns all completed questions \n    }\n\n    get_quiz = (quiz_id) => {\n        // => returns quiz object\n    } \n  \n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport { registerAuthToken, getAuthorizedUser } from './globals.js';\nimport Backend from './backend.js';\n\n\nconst divStyle = {\n  width: '500px',\n  marginTop: '100px',\n}\n\nconst headerStyle = {\n  marginBottom: '20px'\n}\n\nconst inputStyle = {\n  width: '200px'\n}\n\nconst buttonStyle = {\n  width: '100px'\n}\n\n\nclass LogInScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.logIn = this.logIn.bind(this);\n    this.backend = new Backend();\n  }\n\n  logIn(e) {\n    e.preventDefault();\n    const username = this.refs.username.value;\n    const password = this.refs.password.value;\n    console.log(username, password);\n    const history = this.props.history;\n    this.backend.login(username, password, history);\n  }\n\n  render() {\n    const user = getAuthorizedUser();\n    if(user){\n        console.log(this.props);\n        return (\n            <Redirect\n                to={{\n                pathname: \"/dashboard\",\n                state: { from: this.props.location }\n                }}\n            />\n        );\n    }\n    return (\n      <div className=\"mx-auto\" style={divStyle} align=\"center\">\n        <form>\n          <h2 style={headerStyle}>Enter your credentials:</h2>\n          <input ref=\"username\" type=\"text\" style={inputStyle}\n                 className=\"form-control\" placeholder=\"Username\"></input>\n          <br/>\n          <input ref=\"password\" type=\"password\" style={inputStyle}\n                 className=\"form-control\" placeholder=\"Password\"></input>\n          <br/>\n          <button className=\"btn btn-primary\" style={buttonStyle}\n                  onClick={this.logIn}>\n            Log In\n          </button>\n          <div>\n            <Link to=\"/signUp\">go to registration</Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LogInScreen;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Backend from './backend.js';\nimport { STUDENT, createHorizontalDivider,\n         registerAuthToken, getAuthorizedUser } from './globals.js';\nimport bannerImage from './media/QuizzitLogoHorizontal.png';\nimport './style/banner.css';\n\n\nclass Banner extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: false,\n      userType: null\n    };\n\n    this.logOut = this.logOut.bind(this);\n    this.makeLogo  = this.makeLogo.bind(this);\n    this.getLoginButton = this.getLoginButton.bind(this);\n    this.getStatsLink   = this.getStatsLink.bind(this);\n    this.backend = new Backend();\n  }\n\n  makeLogo() {\n    return (\n      <img src={bannerImage} id=\"mainLogo\"\n           alt=\"Quizzit Logo\"/>\n    );\n  }\n\n  logOut() {\n    console.log(this.backend);\n    this.backend.logout();\n  }\n\n  getLoginButton() {\n    const loggedIn = this.state.isLoggedIn;\n    const buttonText = loggedIn ? \"Log Out\" : \"Log In\";\n\n    const href = loggedIn ? \"/\" : \"/dashboard\"\n    const onClickFunc = loggedIn ? this.logOut : null;\n\n    return (\n      <Link to={href} onClick={onClickFunc}>\n        <div id=\"logButton\" className=\"linkButton qButton textshadow\">\n          { buttonText }\n        </div>\n      </Link>\n    );\n  }\n\n  getStatsLink() {\n    if (this.props.userType === STUDENT) {\n      const user = getAuthorizedUser();\n      const userId = user._id;\n      const href = `/summary/${userId}`;\n\n      return (\n        <Link to={href}>\n          <div id=\"statsButton\" className=\"linkButton qButton textshadow\">\n            My Stats\n          </div>\n        </Link>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  componentDidMount() {\n    const user = getAuthorizedUser;\n    const initialState = {\n      isLoggedIn: getAuthorizedUser() !== null,\n      userType: user === null ? null : user.userType\n    }\n\n    this.setState(initialState);\n  }\n\n  render() {\n    console.log(\"Render\");\n    return (\n      <div id=\"banner-container\">\n        <div id=\"banner\" className=\"d-flex justify-content-between align-items-center\">\n          { this.makeLogo() }\n          <div className=\"links d-flex justify-content-end\">\n            <Link to=\"/dashboard\">\n              <div id=\"homeButton\" className=\"linkButton qButton textshadow\">\n                Home\n              </div>\n            </Link>\n            { this.getStatsLink() }\n            { this.getLoginButton() }\n          </div>\n        </div>\n        { createHorizontalDivider(6, \"detail-dark\") }\n      </div>\n    );\n  }\n}\n\nexport default Banner;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Backend from './backend.js';\nimport { STUDENT, EDUCATOR, ADMIN, createVerticalDivider,\n         getAuthorizedUser } from './globals.js';\nimport './style/sidebar.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nconst globals = require(\"./globals.js\");\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.constructCourseMenu = this.constructCourseMenu.bind(this);\n    this.getCourseDropdownLinks = this.getCourseDropdownLinks.bind(this);\n    this.getCourseListComponent = this.getCourseListComponent.bind(this);\n    this.backend = new Backend();\n  }\n\n  deleteCourse = (event, courseID) => {\n    event.preventDefault();\n    globals.course_data.data = this.backend.remove_course(courseID);\n  }\n  \n  getCourseDropdownLinks(course) {\n    const links = [];\n\n    //console.log(\"Printing current active quizzes\");\n    //console.log(this.props.activeQuizzes)\n    const activeQuizzes = this.props.activeQuizzes;\n    var activeQuizBool = false;\n\n    //console.log(\"PRINTING ACTIVE QUIZZES\")\n    //console.log(activeQuizzes[0])\n    activeQuizzes.map((quiz) => {\n      // console.log(quiz.course)\n      // console.log(course._id)\n      // if (quiz.course === course._id) {\n      //   activeQuizBool = true;\n      // }\n      //(\"looping\")\n    })\n\n    //console.log(\"ACTIVE QUIZ BOOL\")\n    //console.log(activeQuizBool)\n\n    if (this.props.userType === STUDENT) {\n      if (course.previousQuiz) {\n        links.push({\n          \"text\": \"View History\",\n          \"href\": `/${course.previousQuiz}/grades`\n        })\n      }\n\n      if (activeQuizBool) {\n        links.push({\n          \"text\": \"Take Quiz\",\n          \"href\": `/answerPage/${course._id}`\n        });\n      }\n\n      return links;\n    } else if (this.props.userType === \"E\") {\n      let firstOp = {}\n      if (activeQuizBool) {\n        firstOp[\"text\"] = \"Open Quiz\";\n        firstOp[\"href\"] = `${course.activeQuiz}/`;\n      } else {\n        firstOp[\"text\"] = \"Create Quiz\";\n        firstOp[\"href\"] = `/createQuiz/${course._id}`;\n      }\n\n      links.push(firstOp);\n      const addStudentComponent = {\n        text: \"Add Student\",\n        href: `/addStudentPage/${course._id}`\n      }\n      links.push(addStudentComponent)\n      if (course.previousQuiz) {\n        links.push({\n          \"text\": \"Past Quizzes\",\n          \"href\": `/${course.previousQuiz}/overview`\n        })\n      }\n    } else if (this.props.userType === ADMIN) {\n      if (course.previousQuiz) {\n        links.push({\n          \"text\": \"Past Quizzes\",\n          \"href\": `/${course.previousQuiz}/overview`\n        })\n      }\n    }\n\n    return links;\n  }\n\n  getCourseActiveQuiz(courseID) {\n\n  }\n\n  constructCourseMenu(course, parentID) {\n\n    var linkMeta = this.getCourseDropdownLinks(course);\n\n    const linkComponents = linkMeta.map((linkInfo) => {\n      if (linkInfo.href) {\n        return (\n          <Link to={linkInfo.href}>\n            <a className=\"dropdown-item\">{linkInfo.text}</a>\n          </Link>\n        )\n      }\n    });\n\n    return (\n      <div className=\"dropdown\">\n        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          {course.courseCode}\n        </button>\n        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n          {linkComponents}\n        </div>\n        <a href=\"#\" onClick={(event) => {this.deleteCourse(event, course._id)}}> delete </a>\n      </div>\n    )\n  }\n\n  getCourseListComponent() {\n    const courses = this.props.courses;\n    const parentId = \"coursesMenu\";\n    console.log(courses);\n    const blank = !courses.length && this.props.userType === STUDENT;\n    const baseComponents = blank ? (\n        <div className=\"stdFont textshadow no-results px-4 mt-3\">\n          You are not in any courses right now. Contact an instructor\n          or administrator to be added to a course.\n        </div>\n      ) : courses.map((course) => this.constructCourseMenu(course, parentId));\n\n    if (this.props.userType !== STUDENT) {\n      baseComponents.push((\n        <Link to=\"/createCourse\">\n          <div id=\"addCourse\" className=\"qButton courseLabel textshadow\" >\n            Add Courses\n          </div>\n        </Link>\n      ))\n    }\n\n    return baseComponents;\n  }\n\n  render() {\n    return (\n      <div id=\"sidebarContainer\" className=\"d-flex align-items-stretch\">\n        { createVerticalDivider(8, \"detail-dark\") }\n        <div id=\"sidebar\">\n          <div id=\"coursesMenu\">\n            <div id=\"coursesHeader\" className=\"textshadow\">\n              Courses\n            </div>\n            <div className=\"courseList accordion\">\n              { this.getCourseListComponent() }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Banner from './banner.js';\nimport Sidebar from './sidebar.js';\nimport { getAuthorizedUser } from './globals.js';\nconst globals = require('./globals.js');\n\n\nclass Template extends Component {\n  constructor(props) {\n    super(props);\n\n    const user = getAuthorizedUser();\n    this.state = {\n      userType: user ? user.userType : null,\n      loggedIn: user,\n      courses: this.props.courses\n    }\n    this.activeQuizzes = [];\n  }\n\n  componentDidMount() {\n    const user = getAuthorizedUser();\n  }\n\n  render() {\n    const userType = this.state.userType;\n    const loggedIn = this.state.loggedIn;\n    console.log(\"update mainTemplate\");\n    console.log(this.props.courses);\n    return (\n      <div id=\"appContainer\" className=\"d-flex flex-column\">\n        <Banner userType={userType} isLoggedIn={loggedIn}/>\n        <div id=\"pageContentRow\" className=\"d-flex align-items-stretch flex-grow-1\">\n          {this.props.courses &&\n            <Sidebar userType={userType} courses={this.props.courses} activeQuizzes={this.activeQuizzes}/>\n          }\n          <div id=\"pageContentWrapper\" className=\"flex-grow-1\">\n            <div id=\"pageContent\">\n              { this.props.children }\n            </div>\n            <div id=\"pageContentShadow\">\n            </div>\n          </div>\n        </div>\n        <div id=\"footer\">\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Template;\n","import React, { Component } from 'react';\n\nimport { createHorizontalDivider } from './globals.js';\n\nclass Notification extends Component {\n  render() {\n    return (\n      <div className=\"dashboardNote\">\n        { createHorizontalDivider(6, \"detail-light\") }\n        <div className=\"blockTitle ml-4 mt-3 mb-4\">\n          <a className=\"font-dark\" href={this.props.href}>\n            <h5>\n              {this.props.title}\n            </h5>\n          </a>\n          { createHorizontalDivider(2, \"background-medium\") }\n          <div className=\"notificationBody d-flex\">\n            {this.props.children}\n          </div>\n        </div>\n        { createHorizontalDivider(6, \"detail-light\") }\n      </div>\n    );\n  }\n}\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport './style/statDisplays.css'\n\nclass ProgressBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.percentToColor = this.percentToColor.bind(this);\n  }\n\n  percentToColor(percent) {\n    const baseZero    = [255, 0, 0];\n    const baseFifty   = [223, 223, 50];\n    const baseHundred = [52, 220, 106];\n    const averageColor = []\n\n    const low  = percent < 50 ? baseZero : baseFifty;\n    const high = percent < 50 ? baseFifty : baseHundred;\n\n    const percentDec = percent === 100 ? 1.0 : (percent % 50.0) / 50.0;\n    for (let i = 0; i < 3; i++) {\n      let avg = high[i] * percentDec + low[i] * (1.0 - percentDec);\n      averageColor.push(avg);\n    }\n\n    return averageColor;\n  }\n\n  render() {\n    const percentFull = this.props.percent;\n    console.log(this.props.percent);\n    const barWidth = percentFull ? `${percentFull.toFixed(2)}%` : \"0.00%\";\n    const color = this.percentToColor(percentFull);\n    const colorStyle = `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\n\n    const fillStyle = {width: barWidth, backgroundColor: colorStyle};\n    const textStyle = {color: colorStyle};\n\n    let fillBarChildren = [\n      <div className=\"progressBarText textOverlay\">\n        {this.props.children}\n      </div>\n    ];\n    let lastChildren = [];\n\n    if (percentFull >= 70) {\n      fillBarChildren.push(\n        <div className=\"progressBarPercent textOverlay\">\n          {barWidth}\n        </div>\n      )\n    } else {\n      lastChildren.push(\n        <div className=\"progressBarPercent\" style={textStyle}>\n          {barWidth}\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"progressBar\">\n        <div className=\"progressFill\" style={fillStyle}>\n          {fillBarChildren}\n        </div>\n        <div className=\"progressBarText\" style={textStyle}>\n          {this.props.children}\n        </div>\n        {lastChildren}\n      </div>\n    );\n  }\n}\n\nexport default ProgressBar;\n","import React, { Component } from 'react';\n\nimport Notification from './dashboardNotification.js';\nimport ProgressBar from './progressBar.js';\nimport { STUDENT, createHorizontalDivider, createVerticalDivider } from './globals.js';\n\n\nclass ReportNotification extends Component {\n  render() {\n    const avgReportText = this.props.userType === STUDENT\n                            ? \"My Grade\"\n                            : \"Class Average\";\n    return (\n      <Notification title={this.props.title}\n                    href={this.props.href}\n        >\n        <div className=\"notificationGenerals d-flex flex-column\">\n          <ProgressBar percent={this.props.average}>\n            {avgReportText}\n          </ProgressBar>\n          { createHorizontalDivider(8, \"background-light\") }\n          <div className=\"notificationDescription flex-grow-1\">\n            {this.props.description}\n          </div>\n        </div>\n        { createVerticalDivider(32, \"background-light\")}\n        <div className=\"notificationStats\">\n          {this.props.children}\n        </div>\n      </Notification>\n    );\n  }\n}\n\nexport default ReportNotification;\n","import React, { Component } from 'react';\n\nimport Notification from './dashboardNotification.js';\nimport { createVerticalDivider } from './globals.js';\n\n\nclass EventNotification extends Component {\n  render() {\n    const exclaimedTitle = `ACTIVE - ${this.props.title}`;\n\n    return (\n      <Notification title={exclaimedTitle}\n                    href={this.props.href}\n        >\n        <div className=\"notificationExtras\">\n          {this.props.children}\n        </div>\n        <div className=\"notificationDescription\">\n          {this.props.description}\n        </div>\n        { createVerticalDivider(12, \"background-light\")}\n        <div className=\"notificationMeta\">\n          Number of Questions: <span className=\"figure\">{this.props.meta.numQuestions}</span>\n          <br/>\n          Number of Students Writing: <span className=\"figure\">{this.props.meta.numStudents}</span>\n        </div>\n      </Notification>\n    )\n  }\n}\n\nexport default EventNotification;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Template from './mainTemplate.js';\nimport ReportNotification from './reportNotification.js';\nimport EventNotification from './eventNotification.js';\nimport ProgressBar from './progressBar.js';\nimport { STUDENT, createVerticalDivider, getAuthorizedUser } from './globals.js';\n\nimport './style/dash.css';\nimport './style/sidebar.css';\nimport './style/banner.css';\nimport './style/index.css';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: null,\n      userType: null,\n      notifications: []\n    };\n\n    this.getNotifications = this.getNotifications.bind(this);\n    this.packageEventNotification  = this.packageEventNotification.bind(this);\n    this.packageReportNotification = this.packageReportNotification.bind(this);\n    this.packageNotification = this.packageNotification.bind(this);\n  }\n\n  getNotifications() {\n    const user = getAuthorizedUser();\n\n    axios.get(`/api/notifications/${user._id}`).then((response) => {\n      const newState = {\n        userType: user.userType,\n        name: user.first + \" \" + user.last,\n        notifications: response.data.notifications\n      }\n\n      this.setState(newState);\n    })\n  }\n\n  packageEventNotification(notification) {\n    if (this.state.userType === STUDENT) {\n      notification.href = `#/answerPage/${notification.data.subject}`;\n    } else {\n      notification.href = `#/createQuiz/${notification.data.subject}`;\n    }\n\n    return (\n      <EventNotification title={notification.data.title}\n                         description={notification.data.description}\n                         href={notification.href}\n                         meta={notification.data.extra}\n                         userType={this.props.userType}\n      />\n    );\n  }\n\n  packageReportNotification(notification) {\n    const hrefBase = `#/${notification.data.quizId}`;\n    if (this.state.userType === STUDENT) {\n      notification.href = `${hrefBase}/grades`;\n    } else {\n      notification.href = `${hrefBase}/overview`;\n    }\n\n    const firstThreeQuestions = notification.extra.questions.length > 3\n                                ? notification.extra.questions.slice(0, 3)\n                                : notification.extra.questions;\n\n    const children = firstThreeQuestions.map((question) => (\n      <ProgressBar percent={100 * question.score / question.question.weight}>\n        {question.question.display}\n      </ProgressBar>\n    ));\n\n    return (\n      <ReportNotification title={notification.data.title}\n                          description={notification.data.description}\n                          href={notification.href}\n                          average={notification.extra.average}\n                          userType={this.props.userType}\n        >\n        {children}\n      </ReportNotification>\n    );\n  }\n\n  packageNotification(notification) {\n    const noteData = notification.data;\n    const title = `${noteData.subject} Quiz ${noteData.series}: ${noteData.title}`;\n\n    delete noteData.series;\n    noteData.title = title;\n\n    if (notification.type === \"event\") {\n      return this.packageEventNotification(notification);\n    } else if (notification.type === \"report\") {\n      return this.packageReportNotification(notification);\n    }\n  }\n\n  componentDidMount() {\n    this.getNotifications();\n  }\n\n  render() {\n    const notifications = this.state.notifications;\n    const notificationElements = notifications.map(this.packageNotification);\n\n    const user = getAuthorizedUser();\n\n    return (\n      <div>\n        <div id=\"dashHeader\" className=\"d-inline-flex align-items-stretch\">\n          { createVerticalDivider(12, \"detail-light\") }\n          { createVerticalDivider(6, \"background-light\") }\n          <div id=\"dashWelcomeContainer\">\n            <h1 id=\"dashWelcome\" className=\"stdFont textshadow\">\n              Welcome back, {user.username}! Here's what's new.\n            </h1>\n          </div>\n          { createVerticalDivider(6, \"background-light\") }\n          { createVerticalDivider(12, \"detail-light\") }\n        </div>\n        { notificationElements }\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport { registerAuthToken, getAuthorizedUser } from './globals.js';\n\nconst divStyle = {\n    width: '500px',\n    marginTop: '100px',\n}\n\nconst headerStyle = {\n    marginBottom: '20px'\n}\n\nconst buttonStyle = {\n    width: '100px'\n}\n\nconst inputStyle = {\n    width: '200px'\n}\n\nclass SignUpScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { loginSuccessful: false };\n    this.registerAccount = this.registerAccount.bind(this);\n  }\n\n  registerAccount() {\n    const username = this.refs.username.value;\n    const firstname = this.refs.firstname.value;\n    const lastname = this.refs.lastname.value;\n    const password = this.refs.password.value;\n    const confirm  = this.refs.confirmpassword.value;\n    const type = this.refs.userTypeSelect.options.selectedIndex;\n\n    if (password !== confirm) {\n      console.log(\"Mismatch\");\n      alert(\"Password and confirm password do not match!\");\n    } else {\n      var usertype = \"S\";\n      \n      if (type==1) {\n        usertype = \"E\";\n      }\n\n      const userBody = {\n        username, firstname, lastname, password, usertype\n      };\n\n      axios.post('/register', userBody).then((response) => {\n        const status = response.status;\n\n        if (status === 201) {\n          const token = response.data.token;\n          const user  = response.data.user;\n\n          registerAuthToken(token, user);\n          this.props.history.push(\"/dashboard\");      \n        } else {\n          alert(`Failed to log in with status ${status}`);\n        }\n      });\n    }\n  }\n\n  render() {\n    const user = getAuthorizedUser();\n    if(user){\n        console.log(this.props);\n        return (\n            <Redirect\n                to={{\n                pathname: \"/dashboard\",\n                state: { from: this.props.location }\n                }}\n            />\n        );\n    }\n    return (\n      <div className=\"mx-auto\" style={divStyle} align=\"center\">\n        <form>\n          <h1 style={headerStyle}>Enter your details below:</h1>\n          <input style={inputStyle} className=\"form-control\" type=\"text\"\n                 placeholder=\"Username\" ref=\"username\"></input>\n          <br/>\n          <input style={inputStyle} className=\"form-control\" type=\"text\"\n                 placeholder=\"First Name\" ref=\"firstname\"></input>\n          <br/>\n          <input style={inputStyle} className=\"form-control\" type=\"text\"\n                 placeholder=\"Last Name\" ref=\"lastname\"></input>\n          <br/>\n          <input style={inputStyle} className=\"form-control\" type=\"password\"\n                 placeholder=\"Password\" ref=\"password\"></input>\n          <br/>\n          <input style={inputStyle} className=\"form-control\" type=\"password\"\n                 placeholder=\"Confirm Password\" ref=\"confirmpassword\"></input>\n          <br/>\n          <select style={inputStyle} className=\"form-control\" ref=\"userTypeSelect\">\n            <option>Student</option>\n            <option>Educator</option>\n          </select>\n          <br/>\n          <button className=\"btn btn-primary\" style={buttonStyle}\n              onClick={this.registerAccount}>Sign Up\n          </button>\n          <div>\n            <Link to=\"/login\">go to login</Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignUpScreen;\n","import React from 'react';\nimport Button from 'react-bootstrap/lib/Button';\nimport Tabs from 'react-bootstrap/lib/Tabs';\nimport Tab from 'react-bootstrap/lib/Tab';\nimport Form from 'react-bootstrap/lib/Form';\nimport Col from 'react-bootstrap/lib/Col';\nimport Row from 'react-bootstrap/lib/Row';\nimport ListGroup from 'react-bootstrap/lib/ListGroup';\nimport Backend from './backend.js';\nimport { withRouter } from \"react-router\";\nimport axios from 'axios';\n\nimport './createquizpage.css';\nvar globals = require('./globals');\n\nclass CreateQuizPageInner extends React.Component {\n    constructor(props){\n        super(props);\n        console.log(props);\n        this.backend = new Backend();\n\n        const courses = this.props.courses;\n        this.state = {\n          quiz: {\n            course: null,\n            series: 0,\n            title: null,\n            weight: 0,\n            description: null,\n            active: false,\n            participants: [],\n            questions: [],\n            classAverage: 0\n          },\n          currentKey: \"quiz\"\n        }\n\n        axios.get(`/api/quizzes/${this.props.match.params.course_id}`)\n             .then((response) => {\n          if (response.status < 400) {\n            const newState = {\n              quizzes: response.data\n            };\n            console.log(\"/api/quizzes/\");\n            console.log(newState);\n            this.setState(newState);\n          }\n          if (this.state.quiz.active === true) {\n            this.state.currentKey = \"question\";\n        }});\n    }\n\n    addQuiz(title){\n        //do server request here after \"optimistic\" UI update\n        //we just use a global variable for this phase\n        const course_id = this.props.match.params.course_id;\n        this.backend.create_quiz(title, course_id, \"\");\n    }\n\n    render(){\n        console.log(\"rerender createquizpage\");\n        const course_id = this.props.match.params.course_id;\n        console.log(this.props.courses);\n        console.log(course_id);\n        const activeCourse = this.props.courses.find((course) => course._id == course_id);\n        console.log(activeCourse)\n        if(activeCourse == undefined){\n            return (\n                <div>\n                    Course not found.\n                </div>\n            )\n        }\n        return( \n            <div className=\"createquiz_container\">\n                <h2>Course: {activeCourse.courseCode}</h2>\n                <Tabs defaultActiveKey=\"question\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"quiz\" title=\"New Quiz\" >\n                        <div id=\"newquiz_container\">\n                            <CreatequizForm createQuiz={this.addQuiz.bind(this)}/>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"question\" title=\"Modify Questions\" >\n                        <div id=\"showquizzes_container\">\n                            <CreatequestionForm quizzes={this.props.quizzes}/>\n                        </div>\n                    </Tab>\n                </Tabs>\n            </div>\n        )\n    }\n\n}\n\nclass CreatequizForm extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {title: \"\"}\n    }\n\n    setTitle(newtitle){\n        this.setState({title: newtitle});\n    }\n\n    render(){\n        return (\n            <div>\n                <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n                    <Form.Label column sm={2}>\n                        Title\n                    </Form.Label>\n                    <Col sm={10}>\n                        <Form.Control value={this.state.title} onChange={(event)=>this.setTitle(event.target.value)} type=\"text\" placeholder=\"Title\" />\n                    </Col>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\" onClick={() => \n                    {\n                        this.props.createQuiz(this.state.title)\n                        this.setTitle(\"\");\n                    }}>\n                    Create quiz\n                </Button>\n            </div>\n        )\n    }\n}\n\nclass CreatequestionForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            selectedIndex: -1, \n            selectedQuiz: 0, \n            selectedCheckbox: -1,\n            questionTitle: \"\",\n            choiceValues: [\"\",\"\",\"\",\"\"],\n            quizzes: props.quizzes,\n        }\n\n        this.publishQuiz = this.publishQuiz.bind(this);\n    }\n\n    changeActiveQuestion(index){\n        if(index == -1){ \n            //changing to \"add question\" mode, reset the \"selected question\" index\n            // and the selected checkbox\n            this.setState({\n                selectedIndex: index, \n                selectedCheckbox: index,\n                choiceValues: [\"\",\"\",\"\",\"\"], \n                questionTitle: \"\"\n            });\n        }\n        else{\n            const activeQuiz = this.props.quizzes[this.state.selectedQuiz];\n            if(activeQuiz == null) return;\n            const activeIndex = activeQuiz.questions[index].correct_index;\n            this.setState({selectedIndex: index, \n                selectedCheckbox: activeIndex, \n                questionTitle: activeQuiz.questions[index].question,\n                choiceValues: activeQuiz.questions[index].choices});\n        }\n    }\n\n    deleteQuestion(index){\n        const selectedQuiz = this.state.selectedQuiz;\n        const activeQuestionIndex = this.state.selectedIndex;\n        let new_quizzes_array = this.props.quizzes;\n        new_quizzes_array[selectedQuiz].questions.splice(index, 1);\n        //make sure that you clear the modify field in case the deleted question is displayed there\n        this.setState({selectedIndex: -1, quizzes: new_quizzes_array});\n        //do server request here after \"optimistic\" UI update\n        //we just use a global variable for this phase\n        globals.quiz_data.data = new_quizzes_array;\n    }\n\n    addQuestion(event){\n        event.preventDefault();\n\n        const answerIndices = globals.nRange(this.state.choiceValues.length);\n        const answerLabels  = answerIndices.map(\n          (index) => `(${String.fromCharCode(index + 97)})`);\n\n        const answers = answerIndices.map((index) => {\n          return {\n            display: answerLabels[index],\n            text: this.state.choiceValues[index]\n          };\n        });\n\n        const correctIndex = this.state.selectedCheckbox;\n        const selectedQuiz = this.props.quizGen();\n        const newQuestion = {\n            question: {\n                display: `Q${selectedQuiz.questions.length + 1}`,\n                text: this.state.questionTitle,\n                correct: [correctIndex],\n                weight: 1\n            },\n            answers: answers\n        };\n\n        axios.post(`/api/quiz/${selectedQuiz._id}`, newQuestion)\n             .then((response) => {\n           this.setState({\n               quiz: response.data,\n               selectedCheckbox: 0,\n               choiceValues: [\"\",\"\",\"\",\"\"],\n               questionTitle: \"\"\n           });\n           alert(\"Question Added to quiz Successfully\")\n        });\n    }\n\n    publishQuiz(event) {\n      event.preventDefault();\n      const selectedQuiz = this.props.quizGen();\n\n      axios.post(`/api/quiz/${selectedQuiz._id}/publish`)\n           .then((response) => {\n         this.setState({\n             quiz: response.data,\n             selectedCheckbox: 0,\n             choiceValues: [\"\",\"\",\"\",\"\"],\n             questionTitle: \"\"\n         });\n         alert(`Quiz ${this.state.quiz.series}: ${this.state.quiz.title}\n               has been Published.`)\n      });\n    }\n\n    modifyQuestion(event, index) {\n        event.preventDefault();\n        const selectedQuiz = this.state.selectedQuiz;\n        const activeQuestionIndex = this.state.selectedIndex;\n        let new_quizzes_array = this.props.quizzes;\n        const new_question = {\n            question: this.state.questionTitle,\n            choices: this.state.choiceValues,\n            correct_index: this.state.selectedCheckbox,\n            }\n        new_quizzes_array[selectedQuiz].questions[activeQuestionIndex] = new_question;\n        this.setState({quizzes: new_quizzes_array});\n        //do server request here after \"optimistic\" UI update\n        //we just use a global variable for this phase\n        globals.quiz_data.data = new_quizzes_array;\n    }\n\n    changeActiveQuiz(event){\n        this.setState({selectedQuiz: event.target.value})\n    }\n\n    handleSelect(event){\n        //need to set selectedCheckbox index to an integer value\n        this.setState({selectedCheckbox: event.target.value*1})\n    }\n\n    handleChangeTitle(event){\n        this.setState({questionTitle: event.target.value})\n    }\n\n    handleChangeChoice(event, index){\n        let choiceValues = this.state.choiceValues;\n        choiceValues[index] = event.target.value;\n        this.setState({choiceValues: choiceValues})\n    }\n\n    render(){\n        console.log(this.props.quizzes);\n        if(this.props.quizzes == undefined || this.props.quizzes.length == 0){\n            return (<div></div>);\n        }\n        const selectedQuiz = this.state.selectedQuiz;\n        const activeQuestionIndex = this.state.selectedIndex;\n        const hasActiveQuestion = (activeQuestionIndex !== -1);\n\n        this.state.quiz = this.props.quizGen();\n\n        return(\n        <Form>\n            <Form.Group as={Row} controlId=\"formGridState\">\n                <Form.Label column sm={2}>\n                    Quiz\n                </Form.Label>\n                <Form.Control as=\"select\" sm={5} bsPrefix=\"select_quiz\" value={selectedQuiz} onChange={(event, index) => {this.changeActiveQuiz(event);}}>\n                    {this.props.quizzes.map((quiz, index) => {\n                        return (\n                            <option value={index} key={index}>{quiz.title}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formHorizontalQuestions\">\n                <Form.Label column sm={2}>\n                    <b>{(!hasActiveQuestion) ? \"Add\" : \"Modify\"} question</b>\n                </Form.Label>\n                {(hasActiveQuestion) ? \n                    <Form.Label column sm={6}>\n                       <Form.Control onChange={(event)=>{this.handleChangeTitle(event)}} \n                            value={this.state.questionTitle} \n                            placeholder={this.props.quizzes[selectedQuiz].questions[activeQuestionIndex].question}/>\n                    </Form.Label>\n                :   <Form.Label column sm={4}>\n                        <Form.Control onChange={(event)=>{this.handleChangeTitle(event)}} \n                            value={this.state.questionTitle} \n                            placeholder=\"type question\"/>\n                    </Form.Label>\n                }\n                {(hasActiveQuestion) ? \n                    <Form.Label column sm={2}>\n                        <a id=\"changeMode_link\" onClick={()=>{this.changeActiveQuestion(-1)}}>Add new question instead</a>\n                    </Form.Label>\n                : \"\"\n                }\n\n            </Form.Group>\n            <Form.Row>\n            {\n                [\"A\",\"B\",\"C\",\"D\"].map((letter, index) => {\n                    const activeQuiz = this.props.quizzes[this.state.selectedQuiz];\n                    if(activeQuiz == null) return;\n                    const choices = hasActiveQuestion ? activeQuiz.questions[activeQuestionIndex].choices : [];\n                    return (\n                        <Form.Group key={index} as={Col} controlId=\"formGridZip\">\n                            <Form.Label>{\"choice \"+letter}</Form.Label>\n                            <Form.Control onChange={(event)=>{this.handleChangeChoice(event, index)}}\n                                value={this.state.choiceValues[index]}\n                                placeholder={hasActiveQuestion ? choices[index] : \"type choice\"} />\n                        </Form.Group>\n                    )\n                })\n            }\n            </Form.Row>\n        <fieldset>\n            <Form.Group as={Row}>\n                <Form.Label as=\"legend\" column sm={2}>\n                    Correct answer\n                </Form.Label>\n                <Col sm={10}>\n                    {\n                        [\"A\",\"B\",\"C\",\"D\"].map((letter, index) => {\n                            return (\n                                <Form.Check\n                                    key={index}\n                                    value={index}\n                                    type=\"radio\"\n                                    label={\"choice \"+letter}\n                                    name=\"formHorizontalRadios\"\n                                    id=\"formHorizontalRadios1\"\n                                    checked={index === this.state.selectedCheckbox}\n                                    onChange={(event) => {this.handleSelect(event);}}\n                                />\n                                )\n                        })\n                    }\n                </Col>\n            </Form.Group>\n        </fieldset>\n            <Button variant=\"primary\" \n                type=\"submit\" \n                onClick={hasActiveQuestion ? (event)=>this.modifyQuestion(event) : (event)=>this.addQuestion(event)}>\n                {hasActiveQuestion ? \"Modify\" : \"Add\"} Question\n            </Button>\n            <Button className=\"ml-3\" variant=\"primary\" onClick={this.publishQuiz}>\n              Publish Quiz\n            </Button>\n        </Form>\n    )}\n}\n\nclass QuestionsList extends React.Component{\n    render(){\n        if(this.props.questions.length == 0){\n            return (\n                <ListGroup>\n                    <ListGroup.Item key={0}>No questions added</ListGroup.Item>\n                </ListGroup>);\n        }\n        return (\n            <ListGroup>\n                {this.props.questions.map((question, index) => {\n                    return (\n                        <ListGroup.Item key={index}>\n                            <span className=\"question_list_text\">{question.question}</span>\n                            <span className=\"question_list_button\">\n                                <Button variant=\"outline-secondary\" onClick={() => {this.props.changeActiveQuestion(index)}}>Modify</Button>\n                            </span>\n                            <span className=\"question_list_button\">\n                                <Button variant=\"outline-secondary\" onClick={() => {this.props.deleteQuestion(index)}}>Delete</Button>\n                            </span>\n                        </ListGroup.Item>\n                        )\n                })}\n            </ListGroup>\n        );\n    }\n}\n\nconst CreateQuizPage = withRouter(CreateQuizPageInner);\nexport default CreateQuizPage;\n\n","import React from 'react';\nimport Button from 'react-bootstrap/lib/Button';\nimport Tabs from 'react-bootstrap/lib/Tabs';\nimport Tab from 'react-bootstrap/lib/Tab';\nimport Form from 'react-bootstrap/lib/Form';\nimport Col from 'react-bootstrap/lib/Col';\nimport Row from 'react-bootstrap/lib/Row';\nimport Jumbotron from 'react-bootstrap/lib/Jumbotron';\n\nimport './answerpage.css'\nvar globals = require('./globals');\n\nclass AnswerPage extends React.Component {\n    constructor(props){\n        super(props);\n        /*here we would get the data from the database*/\n        /*or we pass it as props from a higher order component that gets the data for us*/\n        this.state = {\n            quizzes: globals.quiz_data,\n            selectedIndex: -1,\n            selectedQuiz: 0,\n            selectedCheckbox: -1,\n            score: 0,\n            progress: 0,\n            answers: [],\n        }\n    }\n\n    startQuiz(){\n        this.setState({selectedIndex: 0, progress: 0, score: 0, answers: []});\n    }\n\n    changeActiveQuiz(event){\n        let quizId = event.target.value;\n        this.setState({selectedQuiz: quizId})\n    }\n\n    handleSelect(event){\n        //need to set selectedCheckbox index to an integer value\n        this.setState({selectedCheckbox: event.target.value*1})\n    }\n\n    checkAnswer(event){\n        const answer = this.state.selectedCheckbox;\n        const selectedQuiz = this.state.selectedQuiz;\n        const activeQuestionIndex = this.state.selectedIndex;\n        const activeQuiz = this.state.quizzes[selectedQuiz];\n        const activeQuestion = activeQuiz.questions[activeQuestionIndex];\n        /*check if answer is correct*/\n        const expectedAnswer = activeQuestion.correct_index;\n        let new_score = this.state.score;\n        const isCorrect = expectedAnswer === answer;\n        /*Check that one choice is selected*/\n        if(answer === -1){\n            alert(\"Please choose an answer!\");\n            return false;\n        }\n        if(isCorrect){\n            new_score = new_score+1;\n        }\n        else{\n            let correct_answer = activeQuestion.choices[expectedAnswer];\n            alert(\"The correct answer was '\"+correct_answer+\"'.\");\n        }\n        const new_progress = this.state.progress+1;\n        const isFinished = this.state.selectedIndex+1 === activeQuiz.questions.length;\n        const new_index = isFinished ? -2 : this.state.selectedIndex+1;\n        this.setState({\n            score: new_score,\n            progress: new_progress,\n            selectedIndex: new_index,\n            selectedCheckbox: -1,\n        })\n        /*do server request here to save results in the database*/\n        /*either after each reply or after isFinished is true*/\n        this.state.answers.push(isCorrect);\n        if(isFinished){\n            const result = {\n                userId: \"0\", /*adjust this from auth*/\n                total_score: this.state.score, /*verify this number on the server*/\n                answers: this.state.answers,\n            }\n            let results_array = globals.score_data;\n            results_array.push(result);\n            globals.score_data.data = results_array;\n        }\n    }\n\n    render(){\n        const selectedQuiz = this.state.selectedQuiz;\n        const activeQuestionIndex = this.state.selectedIndex;\n        const activeQuiz = this.state.quizzes[selectedQuiz];\n        const activeQuestion = activeQuiz.questions[activeQuestionIndex];\n        return(\n            <div className=\"createquiz_container\">\n                <Tabs defaultActiveKey=\"quiz\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"quiz\" title=\"Do Quiz\" >\n                        <div id=\"newquiz_container\">\n                            <Form.Group as={Row} controlId=\"formGridState\">\n                                <Form.Label column sm={2}>\n                                    Quiz\n                                </Form.Label>\n                                <Form.Control as=\"select\" sm={5} bsPrefix=\"select_quiz\" value={selectedQuiz} onChange={(event, index) => {this.changeActiveQuiz(event);}}>\n                                    {this.state.quizzes.map((quiz, index) => {\n                                        return (\n                                            <option value={index} key={index}>{quiz.title}</option>\n                                            )\n                                        })\n                                    }\n                                </Form.Control>\n                                <Form.Label column sm={2}>\n                                </Form.Label>\n                                <Form.Label column xs={2} >\n                                    Score: {this.state.score}\n                                </Form.Label>\n                                <Form.Label column xs={2} >\n                                    Progress: {this.state.progress}/{activeQuiz.questions.length}\n                                </Form.Label>\n                            </Form.Group>\n                            {(this.state.selectedIndex === -1) ?\n                                <Button bsStyle=\"primary\" onClick={()=>this.startQuiz()}>Start Quiz</Button>\n                            :\n                            (this.state.selectedIndex === -2) ?\n                                <div>\n                                    <p>You got {this.state.score} out of {activeQuiz.questions.length} questions right. Congrats!</p>\n                                    <Button bsStyle=\"primary\" onClick={()=>this.startQuiz()}>Restart Quiz</Button>\n                                </div>\n                            :\n                            <Jumbotron>\n                                <h2>Q{this.state.progress+1}: {activeQuestion.question}</h2>\n                                <fieldset>\n                                    <Form.Group as={Row}>\n                                        <Form.Label as=\"legend\" column sm={2}>\n                                            Choose the answer\n                                        </Form.Label>\n                                        <Col sm={10}>\n                                            {\n                                                [\"A\",\"B\",\"C\",\"D\"].map((letter, index) => {\n                                                    return (\n                                                        <Form.Check\n                                                            key={index}\n                                                            value={index}\n                                                            type=\"radio\"\n                                                            label={activeQuestion.choices[index]}\n                                                            name=\"formHorizontalRadios\"\n                                                            id=\"formHorizontalRadios1\"\n                                                            checked={index === this.state.selectedCheckbox}\n                                                            onChange={(event) => {this.handleSelect(event);}}\n                                                        />\n                                                        )\n                                                })\n                                            }\n                                        </Col>\n                                    </Form.Group>\n                                </fieldset>\n                                <p>\n                                    <Button bsStyle=\"primary\" onClick={(event)=>{this.checkAnswer(event)}}>Submit answer</Button>\n                                </p>\n                            </Jumbotron>}\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"statistics\" title=\"My Statistics\" >\n                        <div id=\"showquizzes_container\">\n                        </div>\n                    </Tab>\n                </Tabs>\n             </div>\n        )\n    }\n\n}\n\nexport default AnswerPage;\n","import React, { Component } from 'react';\nimport ChartistGraph from 'react-chartist';\nimport Legend from 'chartist-plugin-legend';\n\nimport './style/statDisplays.css';\n\n\nexport default class PieChart extends Component {\n  render() {\n    const data = this.props.answers.map((datum) => datum.value);\n    const labels = this.props.answers.map((datum) => datum.label);\n\n    console.log(this.props.answers);\n    console.log(this.props.correctAnswers);\n\n    const classNames = Array(this.props.answers.length).fill(\"\");\n\n    for (let i = 0; i < labels.length; i++) {\n      if (this.props.correctAnswers.includes(labels[i])) {\n        data[i] = {value: data[i], className: \"correctAnswer\"};\n        classNames[i] = \"correctAnswer\";\n      }\n    }\n\n    const chartData = {\n      series: data,\n      labels: labels\n    };\n\n    const options = {\n      stackBars: true,\n      labels: false,\n      plugins: [\n        Legend({\n          classNames: classNames\n        })\n      ]\n    };\n\n    return (\n      <div className=\"pieChart\">\n        <h5>\n          {this.props.title}\n        </h5>\n        <ChartistGraph type=\"Pie\" data={chartData} options={options}/>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './style/statDisplays.css';\n\n\nfunction highlightWrongAnswer(row, col, ind) {\n  const cell = row[ind];\n  const qLabel = col;\n\n  const qIndex = this.state.quiz.questions.findIndex((q) => q.display === qLabel);\n  if (qIndex < 0) {\n    return false;\n  }\n  const question = this.state.quiz.questions[qIndex];\n\n  const answer = question.options.find((a) => a.display === cell.text);\n  if (!answer) {\n    return true;\n  } else {\n    const answerId = answer._id;\n    return !question.correct.includes(answerId);\n  }\n}\n\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columnHeads: []\n    };\n\n    this.createInnerElem = this.createInnerElem.bind(this);\n    this.createHeaders = this.createHeaders.bind(this);\n    this.createRow = this.createRow.bind(this);\n  }\n\n  createInnerElem(cellMeta) {\n    if (!cellMeta) {\n      return (<div/>);\n    } else {\n      return \"href\" in cellMeta\n             ? (<Link to={cellMeta.href}>\n                  {cellMeta.text}\n                </Link>)\n             : (<div>{cellMeta.text}</div>);\n    }\n  }\n\n  createHeaders(headers) {\n    return (\n      <tr>\n        {headers.map((headerMeta) => {\n          return (\n            <th>\n              { this.createInnerElem(headerMeta) }\n            </th>\n          );\n        })}\n      </tr>\n    );\n  }\n\n  createRow(index, heads, rowData, tails) {\n    const tailValues = tails.map((tail) => {\n      return {text: tail.generate(index, rowData)};\n    });\n\n    const textLabels = heads.concat(rowData).concat(tailValues);\n    const indices = [...Array(textLabels.length).keys()];\n\n    const dataCells = indices.map((ind) => {\n      const cell = textLabels[ind];\n      const head = this.state.columnHeads[ind].text;\n\n      const className = this.props.highlight(textLabels, head, ind) ? \"target\" : \"\";\n      return (\n        <td className={className}>\n          {this.createInnerElem(cell)}\n        </td>\n      );\n    });\n\n    return (\n      <tr>\n        {dataCells}\n      </tr>\n    );\n  }\n\n  render() {\n    const isString = (obj) => typeof obj === \"string\" || obj instanceof String;\n    const convertToObj = (unit) => isString(unit) ? {text: unit} : unit;\n\n    const extractColHeads = (aux) => aux.map((auxCol) => auxCol.colHead);\n    const heads = extractColHeads(this.props.heads)\n                  .concat(this.props.columnHeads)\n                  .concat(extractColHeads(this.props.tails))\n                  .map(convertToObj);\n    const cells = this.props.data.map((row) => row.map(convertToObj));\n\n    const rowIndices = [...Array(cells.length).keys()];\n\n    const columnHeads = heads;\n\n    return (\n      <div className=\"displayTable\">\n        <div className=\"tableTitle\">\n          {this.props.title}\n        </div>\n        <table>\n          <thead>\n            {this.createHeaders(heads)}\n          </thead>\n          <tbody>\n            {rowIndices.map((ind) => this.createRow(ind,\n                                                    this.props.heads.map((head) => convertToObj(head.rows[ind])),\n                                                    cells[ind],\n                                                    this.props.tails))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport { Table, highlightWrongAnswer };\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Template from './mainTemplate.js';\nimport ProgressBar from './progressBar.js';\nimport PieChart from './pieChart.js';\nimport { Table, highlightWrongAnswer } from './statTable.js';\nimport { createHorizontalDivider, createVerticalDivider,\n         toPercent, nRange } from './globals.js';\n\nimport './style/template.css';\n\n\nexport default class ClassQuizResults extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quiz: {\n        _id: 0,\n        subject: {\n          courseCode: \"\"\n        },\n        series: 0,\n        title: null,\n        description: null,\n        questions: [],\n      },\n      stats: {\n        average: 0,\n        attendance: 0,\n        performance: []\n      }\n    };\n\n    this.getPerformance = this.getPerformance.bind(this);\n    this.extractAttendanceRate = this.extractAttendanceRate.bind(this);\n    this.extractAverageGrade = this.extractAverageGrade.bind(this);\n    this.getPerformanceRecord = this.getPerformanceRecord.bind(this);\n    this.generateQuestionStatsChart = this.generateQuestionStatsChart.bind(this);\n  }\n\n  getPerformance() {\n    axios.get(`/api/performance/quiz/${this.props.match.params.quizId}/`)\n         .then((response) => {\n      const newState = response.data;\n      this.setState(newState);\n    });\n  }\n\n  extractAttendanceRate() {\n    return this.state.stats.attendance;\n  }\n\n  extractAverageGrade() {\n    return this.state.stats.average;\n  }\n\n  getPerformanceRecord() {\n    const courseCode = this.state.quiz.subject.courseCode;\n    const questionNames = this.state.quiz.questions.map((question) => question.display);\n    const questionIndices = nRange(this.state.quiz.questions.length);\n\n    const attendanceHeaders = questionNames.map((text) => {\n      return {\n        text: text,\n        expand: [\"(a)\", \"(b)\", \"(c)\", \"(d)\"].join(\"\\n\")\n      };\n    });\n\n    // Build text for each table cell: A if the student was absent, X if they\n    // missed the question, otherwise the answer they chose.\n    const attendanceRows = this.state.stats.performance.map((studentData) => {\n      const reports = questionIndices.map((qIndex) => {\n        if (studentData.answers === null) {\n          return \"A\";\n        } else if (\"choice\" in studentData.answers[qIndex]) {\n          const choiceId = studentData.answers[qIndex].choice._id;\n          const question    = this.state.quiz.questions[qIndex];\n          const match = question.options.find((option) => option._id.toString() === choiceId.toString())\n\n          return match.display;\n        } else {\n          return \"X\";\n        }\n      })\n\n      return reports;\n    });\n\n    // Metadata objects for name cells at the left side of the table.\n    const studentNames = this.state.stats.performance.map((studentData) => {\n      const name = studentData.student.first + \" \" + studentData.student.last;\n      const href = `/summary/${studentData.student.id}/${courseCode}`;\n\n      return {\n        text: name,\n        href: href\n      };\n    });\n\n    const averageGenerator = (ind, row) =>\n      toPercent(this.state.stats.performance[ind].grade, 2);\n\n    return (\n      <Table title={`Quiz ${this.state.quiz.series} Performance`}\n             columnHeads={attendanceHeaders}\n             data={attendanceRows}\n             highlight={highlightWrongAnswer.bind(this)}\n             heads={[{colHead: \"Name\", rows: studentNames}]}\n             tails={[{colHead: \"Grade\", generate: averageGenerator.bind(this)}]}>\n      </Table>\n    );\n  }\n\n  generateQuestionStatsChart() {\n    const qIndices = nRange(this.state.quiz.questions.length);\n    return qIndices.map((qIndex) => {\n      // Generate one pie chart per question.\n      const question = this.state.quiz.questions[qIndex];\n      const title = `${question.display} Answer Distribution`;\n      const correct = question.correct.map(\n        (correct) => question.options.find(\n          (option) => option._id.toString() === correct.toString()\n        ).display\n      );\n\n      const oIndices = nRange(question.options.length);\n      const qStats = oIndices.map((index) => question.options[index].chosenBy)\n      const usedAnswers = nRange(qStats.length).filter((aIndex) => qStats[aIndex] > 0);\n\n      if (usedAnswers.length === 0) {\n        // No students answered this question at all. Omit any pie charts for it.\n        return null;\n      } else {\n        // Translate the map of answer index to number of students that chose\n        // that answer into an object of the right form for a pie chart to read.\n        const answerDistr = usedAnswers.map((aIndex) => {\n          return {\n            label: question.options[aIndex].display,\n            value: qStats[aIndex]\n          };\n        });\n\n        return (\n          <PieChart title={title}\n                    answers={answerDistr}\n                    correctAnswers={correct}>\n          </PieChart>\n        );\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getPerformance();\n  }\n\n  render() {\n    console.log(\"Class Quiz Stats\", this.state);\n    const subject = this.state.quiz.subject.courseCode;\n    const quizNum = this.state.quiz.series;\n    const quizTitle = `${subject} Quiz ${quizNum}`;\n\n    const attendanceRate = this.extractAttendanceRate();\n    const performanceRecord = this.getPerformanceRecord();\n    const averageGrade  = this.extractAverageGrade();\n\n    const questionStatCharts = this.generateQuestionStatsChart();\n\n    return (\n      <div className=\"classResults\">\n        <div className=\"blockTitle ml-4 mt-3 mb-4\">\n          <h3 className=\"figure mb-1\">\n            {quizTitle}\n          </h3>\n          <h5 className=\"subhead font-dark\">\n            {this.state.quiz.title}\n          </h5>\n          { createHorizontalDivider(2, \"background-medium\") }\n          <h5 className=\"body font-dark\">\n            {this.state.quiz.description}\n          </h5>\n        </div>\n        <div id=\"classQuizGrades\" className=\"ml-4\">\n          <ProgressBar percent={averageGrade}>\n            Class Average\n          </ProgressBar>\n          { createHorizontalDivider(8, \"background-light\") }\n          <ProgressBar percent={attendanceRate}>\n            Percent Attendance\n          </ProgressBar>\n          { createHorizontalDivider(16, \"background-light\") }\n          { performanceRecord }\n          { createHorizontalDivider(20, \"background-light\") }\n          <div className=\"d-flex flex-wrap\">\n            { questionStatCharts }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Button from 'react-bootstrap/lib/Button';\nimport axios from 'axios';\n\nimport Template from './mainTemplate.js';\nimport ProgressBar from './progressBar.js';\nimport PieChart from './pieChart.js';\nimport { Table } from './statTable.js';\nimport { createHorizontalDivider, toPercent,\n         nRange, getAuthorizedUser } from './globals.js';\n\nimport './style/template.css';\n\nexport default class StudentQuizResults extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      student: {\n        id: null,\n        first: null,\n        last: null\n      },\n      quiz: {\n        id: 0,\n        course: {\n          courseCode: null\n        },\n        series: null,\n        title: null,\n        description: null,\n        questions: [],\n      },\n      performance: {\n        grade: 0,\n        average: 0,\n        answers: []\n      }\n    };\n\n    this.getQuizResults = this.getQuizResults.bind(this);\n  }\n\n  getQuizResults() {\n    const user = getAuthorizedUser();\n    const userId = user._id;\n\n    axios.get(`/api/performance/quiz/${userId}/${this.props.match.params.quizId}`)\n         .then((response) => {\n      const newState = response.data;\n      this.setState(newState);\n    });\n  }\n\n  componentDidMount() {\n    const loadState = this.getQuizResults();\n    this.setState(loadState);\n  }\n\n  render() {\n    // Build rows of table cells for primary data. Only one column is primary\n    // data, and it contains chosen answers: other columns are heads and tails.\n    const questionIndices = nRange(this.state.performance.answers.length);\n    const answers = questionIndices.map((qIndex) => {\n      const question = this.state.quiz.questions[qIndex];\n      const answer = this.state.performance.answers[qIndex].choice;\n      const match = question.options.find((option) => option._id.toString() === answer._id.toString())\n\n      // return [[question.options[answer].display];]\n      return match ? [match.display] : [null];\n    });\n\n    // An extra row is added to the bottom for class average, with no entry for\n    // primary data.\n    if (answers.length > 0) {\n      answers.push([\"\"]);\n    }\n\n    const quizTitle = `${this.state.quiz.course.courseCode} Quiz ${this.state.quiz.series}: ${this.state.quiz.title}`;\n\n    // Highlighter picks out cells that are (a) in the primary column and (b)\n    // represent places where the student got the wrong answer (or no answer).\n    const highlightWrongAnswer = (row, col, ind) => {\n      if (ind !== 1 || row[ind].text === \"\") {\n        return false;\n      } else {\n        const questionTitle = row[0].text;\n        const qIndex   = this.state.quiz.questions.findIndex((question) => question.display === questionTitle);\n        const question = this.state.quiz.questions[qIndex];\n        const answer   = this.state.performance.answers[qIndex].choice._id;\n\n        return !question.correct.find((q) => q.toString() === answer.toString());\n      }\n    };\n\n    return(\n      <div className=\"studentQuizResults\">\n        <div className=\"blockTitle ml-4 mt-3 mb-4\">\n          <h3 className=\"figure\">\n            {quizTitle}\n          </h3>\n          { createHorizontalDivider(2, \"background-medium\") }\n          <h5 className=\"body font-dark\">\n            {this.state.quiz.description}\n          </h5>\n        </div>\n\n        <div className=\"container pl-4\">\n          <Table title={`Quiz ${this.state.quiz.series} Results`}\n                 columnHeads={[\"Your Answer\"]}\n                 data={answers}\n                 highlight={highlightWrongAnswer}\n                 heads={[{colHead: \"Question\", rows: this.state.quiz.questions.map((question) => question.display)}]}\n                 tails={[{colHead: \"Correct Answer\", generate: (ind, row) => {\n                   if (ind === this.state.quiz.questions.length) {\n                     // Last row in the table has no content in this column.\n                     return \"\"\n                   } else {\n                     // Other rows report all correct answers for the question\n                     // that the row represents.\n                     const question = this.state.quiz.questions[ind];\n                     const correctAnswers = question.correct.map((qCorrect) => {\n                       const match = question.options.find((option) => option._id.toString() === qCorrect.toString());\n                       return match ? match.display : null\n                     });\n\n                     return correctAnswers.join(\", \");\n                   }\n                 }},\n                 {colHead: \"Grades\", generate: (ind, row) => {\n                   if (ind === this.state.quiz.questions.length) {\n                     // Last row in the table reports the user's grade.\n                     return this.state.performance.grade;\n                   } else {\n                     // Other rows report the user's score for a single question.\n                     const question = this.state.quiz.questions[ind];\n                     const answer   = this.state.performance.answers[ind];\n\n                     // No part marks. 0 points for wrong answer, else a number\n                     // defined by the question's weight.\n                     return question.correct.includes(answer.choice._id)\n                            ? question.weight\n                            : 0;\n                   }\n                 }},\n                 {colHead: \"Class Performance\", generate: (ind, row) => {\n                   if (ind < this.state.performance.answers.length\n                       && this.state.performance.answers[ind]) {\n                     // Valid, interior table cells report the class average\n                     // for the question that the row represents.\n                     return toPercent(this.state.performance.answers[ind].question.classAverage, 0);\n                   } else {\n                     // Final table row reports the class average for the quiz.\n                     return toPercent(this.state.performance.classAverage, 2);\n                   }\n                 }}]}>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Template from './mainTemplate.js';\nimport ProgressBar from './progressBar.js';\nimport { Table } from './statTable.js';\nimport { createHorizontalDivider, toPercent,\n         getAuthorizedUser } from './globals.js';\n\n\nexport default class StudentCourseSummary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      student: {\n        id: null,\n        first: null,\n        last: null\n      },\n      performance: {\n        average: 0,\n        history: []\n      }\n    };\n\n    this.getCourseGrades = this.getCourseGrades.bind(this);\n    this.createAverageBar = this.createAverageBar.bind(this);\n    this.createPerformanceGraph = this.createPerformanceGraph.bind(this);\n  }\n\n  getCourseGrades() {\n    const user = getAuthorizedUser();\n    const userId = user._id;\n    axios.get(`/api/performance/subject/${userId}/${this.props.course._id}`)\n         .then((response) => {\n      const newState = response.data;\n      this.setState(newState);\n    })\n  }\n\n  createAverageBar() {\n    return (\n      <ProgressBar percent={this.state.performance.average}>\n        Current Average\n      </ProgressBar>\n    )\n  }\n\n  createPerformanceGraph() {\n    // Define table cell values: either \"A\" if the student missed the quiz,\n    // or their grade otherwise.\n    const data = this.state.performance.history.map((quiz) =>\n      quiz.grade ? toPercent(quiz.grade, 2) : \"A\"\n    );\n\n    // Define values for the row of headers at the top of the table.\n    // Quizzes the student did not skip contain links to their results page.\n    const headers = this.state.performance.history.map((quiz) => {\n      const basis = {\n        text: `Quiz ${quiz.series}`,\n        expanded: quiz.title\n      };\n\n      if (quiz.grade) {\n        basis.href = `/${quiz._id}/grades`;\n      }\n\n      return basis;\n    });\n\n    return (\n      <Table title={`${this.props.course.courseCode} Performance Record`}\n             columnHeads={headers}\n             data={[data]}\n             highlight={(row, column, ind) => row[ind].text === \"A\"}\n             heads={[{colHead: \"\", rows: [\"Grade\"]}]}\n             tails={[{colHead: \"Average\", generate: (ind, row) => toPercent(this.state.performance.average, 2)},\n                     {colHead: \"Attendance\", generate: (ind, row) => toPercent(row.filter((cell) => cell.text !== \"A\").length * 100.0 / row.length)}]}>\n      </Table>\n    );\n  }\n\n  componentDidMount() {\n    this.getCourseGrades();\n  }\n\n  render() {\n    return (\n      <div className=\"courseSummary mb-5\">\n        <div className=\"blockTitle ml-4 mb-3\">\n          { createHorizontalDivider(2, \"background-medium\") }\n          <h4 className=\"font-dark ml-2\">\n            {this.props.course.courseCode}\n          </h4>\n          { createHorizontalDivider(2, \"background-medium\") }\n        </div>\n        <div className=\"ml-4\">\n          { this.createAverageBar() }\n          { createHorizontalDivider(14, \"background-light\")}\n          { this.createPerformanceGraph() }\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Template from './mainTemplate.js';\nimport StudentCourseSummary from './studentCourseSummary.js';\nimport Table from './statTable.js';\nimport { createHorizontalDivider } from './globals.js';\n\nimport './style/template.css';\n\n\nexport default class StudentSummary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        _id: null,\n        first: null,\n        last: null,\n      },\n      courses: []\n    };\n\n    this.getStudentCourses = this.getStudentCourses.bind(this);\n    this.getCourseSummaries = this.getCourseSummaries.bind(this);\n  }\n\n  getStudentCourses() {\n    axios.get(`/api/courses/${this.props.match.params.studentId}`)\n         .then((response) => {\n      const newState = response.data;\n      this.setState(newState);\n    })\n  }\n\n  getCourseSummaries(studentId) {\n    return this.state.courses.map((course) => {\n      return (\n        <StudentCourseSummary studentId={this.state.user._id}\n                              course={course}>\n        </StudentCourseSummary>\n      )\n    })\n  }\n\n  componentDidMount() {\n    this.getStudentCourses();\n  }\n\n  render() {\n    const fullName = this.state.user.first + \" \" + this.state.user.last;\n    return (\n      <div className=\"studentWholeSummary\">\n        <div className=\"blockTitle ml-4 mb-3 mt-3\">\n          <h3 className=\"figure mb-1\">\n            {fullName}\n          </h3>\n          <h5 className=\"subhead font-dark\">\n            Username: {this.state.user.username}\n          </h5>\n        </div>\n        { this.getCourseSummaries() }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Backend from './backend.js';\n\nconst divStyle = {\n    width: '500px',\n    marginTop: '100px',\n}\n\nconst headerStyle = {\n    marginBottom: '20px'\n}\n\nconst buttonStyle = {\n    width: '100px'\n}\n\nconst inputStyle = {\n    width: '200px'\n}\n\n\nexport default class CreateCourse extends Component {\n    constructor(props) {\n        super(props);\n\n        this.createCourse = this.createCourse.bind(this);\n        this.backend = new Backend();\n    }\n\n    createCourse() {\n        const course = this.refs.courseCode.value;\n        // accesses the backend through our Data Access Object\n        this.backend.create_course(course);\n        setTimeout(function(){\n            window.location.reload();\n        },100);\n    }\n\n    render() {\n        return (\n            <div className=\"mx-auto\" style={divStyle} align=\"center\">\n                <form>\n                <h1 style={headerStyle}>Enter course details below:</h1>\n                <input style={inputStyle} className=\"form-control\" type=\"text\"\n                        placeholder=\"Course Code\" ref=\"courseCode\"></input>\n                <br/>\n                <button className=\"btn btn-primary\" style={buttonStyle}\n                        onClick={this.createCourse}>Create</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { getAuthorizedUser } from './globals.js';\n\nconst divStyle = {\n    width: '500px',\n    marginTop: '100px',\n}\n\nconst headerStyle = {\n    marginBottom: '20px'\n}\n\nconst buttonStyle = {\n    width: '100px'\n}\n\nconst inputStyle = {\n    width: '200px'\n}\n\n\nexport default class AddStudentPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.addStudent = this.addStudent.bind(this)\n    }\n\n    addStudent() {\n        const student = this.refs.studentUsername.value;\n        var studentID = \"\";\n        const courseID = this.props.match.params.course_id;\n        var course;\n\n        axios.get(`/api/students/getByUsername/${student}`).then((response) => {\n\n            studentID = response.data._id;\n            axios.get(`/api/courses/getCourseByID/${courseID}`).then((response) => {\n                const request = {\n                    user: studentID,\n                    course: courseID\n                }\n    \n                console.log(\"CALLING enroll endpoint\")\n                console.log(request)\n                axios.post(`/api/enroll`, request).then((response) => {\n                    const status = response.status;\n                    console.log(\"within enrollument successblock\");\n                    if (status === 200) {\n                        console.log(\"Course successfully added\");\n                        \n                        alert(\"Student successfully added\");\n                    } else {\n                        alert(\"Student Could not be Added\");\n                    }\n                })\n            })\n    \n        }).catch(function (error) {\n            // handle error\n            alert(\"student not found.\");\n            console.log(error);\n          })\n\n    }\n\n    render() {\n        console.log(\"Entered RENDER STATEMENT FOR ADD STUDENT PAGE\")\n        return (\n            <div className=\"mx-auto\" style={divStyle} align=\"center\">\n                <form>\n                <h1 style={headerStyle}>Enter information below:</h1>\n                <input style={inputStyle} className=\"form-control\" type=\"text\"\n                        placeholder=\"Student Username\" ref=\"studentUsername\"></input>\n                <br/>\n                <button className=\"btn btn-primary\" style={buttonStyle}\n                        onClick={this.addStudent}>Add </button>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport WelcomeScreen from \"./welcomeScreen.js\";\nimport LogInScreen from \"./logInScreen.js\";\nimport Dashboard from \"./dashboard.js\";\nimport SignUpScreen from \"./signUpScreen.js\";\nimport CreateQuizPage from \"./createQuizPage.js\";\nimport AnswerPage  from \"./answerPage.js\"\nimport ClassQuizResults from \"./classQuizResults.js\";\nimport StudentQuizResults from \"./studentQuizResults.js\";\nimport StudentSummary from './studentSummary.js';\nimport { STUDENT, EDUCATOR, ADMIN, getAuthorizedUser } from \"./globals.js\";\nimport Template from './mainTemplate.js';\nimport CreateCourse from \"./createCourse.js\";\nimport AddStudentPage from \"./addStudentPage.js\";\nimport Backend from './backend.js';\nimport { withRouter } from \"react-router\";\nimport axios from 'axios';\n\nconst globals = require(\"./globals.js\");\n\nlet userType = STUDENT;\nfunction setUserType(newUserType) {\n  userType = newUserType;\n}\n\nclass Router extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" exact component={WelcomeScreen}/>\n                    <Route path=\"/login\" exact render={\n                        (props) => <LogInScreen {...props}/>\n                    }/>\n                    <Route path=\"/signUp\" exact render={\n                        (props) => <SignUpScreen {...props}/>\n                    }/>\n                    <LoggedInPages />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\nclass LoggedInPagesInner extends Component {\n    constructor(props){\n        super(props);\n        this.backend = new Backend();\n        globals.course_data.data = [];\n        this.state = {courses: []};\n    }\n\n    componentDidMount(){\n        const user = getAuthorizedUser();\n        console.log(\"getting courses\");\n        axios.get(`/api/courses/${user._id}`).then((response) => {\n            console.log(\"Entering component didmount endpoint\")\n            const newState = {\n              userType: user.userType,\n              loggedIn: true,\n              courses: response.data.courses\n            };\n            console.log(response.data.courses)\n            console.log(\"cdm courses\")\n            this.setState(newState);\n        })\n\n    \n    }\n\n    render() {\n        console.log(\"render Loggedinpagesinner\");\n        const user = getAuthorizedUser();\n        if(!user){\n            console.log(this.props);\n            return (\n                <Redirect\n                    to={{\n                    pathname: \"/login\",\n                    state: { from: this.props.location }\n                    }}\n                />\n            );\n        }\n        return (\n            <div>\n                <Template courses={this.state.courses} userType={user.userType} loggedIn={true}>\n                    <Switch>\n                        <Route path=\"/:quizId/grades\" render={\n                            (props) => <StudentQuizResults {...props}/>\n                        }/>\n                        <Route path=\"/:quizId/overview\" render={\n                            (props) => <ClassQuizResults {...props}/>\n                        }/>\n                        <Route path=\"/summary/:studentId\" render={\n                            (props) => <StudentSummary {...props}/>\n                        }/>\n                        <Route path=\"/dashboard\" exact render={() => <Dashboard userType={user.userType}/>} />\n                        <Route path=\"/createQuiz/:course_id\" render={() => <CreateQuizPage courses={this.state.courses}/>}/>\n                        <Route path=\"/answerPage/:course_id\" component={AnswerPage}/>\n                        <Route path=\"/createCourse\" render={\n                            (props) => <CreateCourse {...props}/>\n                        }/>\n                        <Route path=\"/addStudentPage/:course_id\" render={\n                            (props) => <AddStudentPage {...props}/>\n                        }/>\n                    </Switch>\n                </Template>\n            </div>\n        );\n    }\n}\n\nconst LoggedInPages = withRouter(LoggedInPagesInner);\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from \"jquery\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport Router from './router.js';\nimport './style/index.css';\n\nconst rootElem = (\n  <Router />\n);\nReactDOM.render(rootElem, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/QuizzitLogoHorizontal.496e754a.png\";"],"sourceRoot":""}